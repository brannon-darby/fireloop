<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fireloop Documentation</title>
  <subtitle>Designed for Modern Real-Time Applications by MEAN Expert.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fireloop.io/"/>
  <updated>2017-05-04T21:41:26.411Z</updated>
  <id>http://fireloop.io/</id>
  
  <author>
    <name>Mean.Expert</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Manejar Desconecciones</title>
    <link href="http://fireloop.io/es/handle-disconnections/"/>
    <id>http://fireloop.io/es/handle-disconnections/</id>
    <published>2017-05-04T21:41:26.411Z</published>
    <updated>2017-05-04T21:41:26.411Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://storage.googleapis.com/mean-expert-images/fireloop-logo.png" alt="FireLoop.io" title="">
                </div>
                <div class="image-caption">FireLoop.io</div>
            </figure>
<h2 id="Manejar-Desconecciones"><a href="#Manejar-Desconecciones" class="headerlink" title="Manejar Desconecciones"></a>Manejar Desconecciones</h2><p>A veces, cuando se desconecta un usuario del servidor, es necesario aplicar algunas reglas. Por ejemplo, si su programa es una aplicación de chat, es posible que usted desee mostrar a otros usuarios cuando alguno se ha desconectado.</p>
<p><code>NOTA: Funcionalidad disponible en loopback-component-realtime@1.0.0-rc.6 o superior</code></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; BootScript &#125; <span class="keyword">from</span> <span class="string">'@mean-expert/boot-script'</span>;</div><div class="line"></div><div class="line">interface Account &#123;</div><div class="line">    <span class="attr">id</span>: string,</div><div class="line">    <span class="attr">connected</span>: boolean;</div><div class="line">    updateAttributes: <span class="built_in">Function</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">interface Socket &#123; <span class="attr">token</span>: &#123; <span class="attr">userId</span>: string &#125; &#125;</div><div class="line"></div><div class="line">@BootScript()</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OnDisconnect</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">constructor</span>(public app: any) &#123;</div><div class="line">        app.on(<span class="string">'socket-disconnect'</span>, (socket: Socket) =&gt; <span class="keyword">this</span>.handler(socket));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    handler(socket: Socket): <span class="keyword">void</span> &#123;</div><div class="line">        <span class="keyword">if</span> (socket.token &amp;&amp; socket.token.userId) &#123;</div><div class="line">            <span class="keyword">let</span> userId: string = <span class="string">`<span class="subst">$&#123; socket.token.userId &#125;</span>`</span></div><div class="line">            <span class="keyword">this</span>.app.models.Account.findById(userId, (err: <span class="built_in">Error</span>, <span class="attr">account</span>: Account) =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'A user has been disconnected:'</span>, account.id);</div><div class="line">                account.updateAttributes(&#123; <span class="attr">connected</span>: <span class="literal">false</span>  &#125;);</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = OnDisconnect;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Handle Disconnections</title>
    <link href="http://fireloop.io/en/handle-disconnections/"/>
    <id>http://fireloop.io/en/handle-disconnections/</id>
    <published>2017-05-04T21:41:11.580Z</published>
    <updated>2017-05-04T21:41:11.580Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://storage.googleapis.com/mean-expert-images/fireloop-logo.png" alt="FireLoop.io" title="">
                </div>
                <div class="image-caption">FireLoop.io</div>
            </figure>
<h2 id="Handle-Disconnections"><a href="#Handle-Disconnections" class="headerlink" title="Handle Disconnections"></a>Handle Disconnections</h2><p>Sometimes when a user is disconnected from the server, some business rules required to be applied. For example if your program is a chat application, you might want to show to others when a user disconnects.</p>
<p><code>NOTE: Functionality available on loopback-component-realtime@1.0.0-rc.6 or above</code></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; BootScript &#125; <span class="keyword">from</span> <span class="string">'@mean-expert/boot-script'</span>;</div><div class="line"></div><div class="line">interface Account &#123;</div><div class="line">    <span class="attr">id</span>: string,</div><div class="line">    <span class="attr">connected</span>: boolean;</div><div class="line">    updateAttributes: <span class="built_in">Function</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">interface Socket &#123; <span class="attr">token</span>: &#123; <span class="attr">userId</span>: string &#125; &#125;</div><div class="line"></div><div class="line">@BootScript()</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OnDisconnect</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">constructor</span>(public app: any) &#123;</div><div class="line">        app.on(<span class="string">'socket-disconnect'</span>, (socket: Socket) =&gt; <span class="keyword">this</span>.handler(socket));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    handler(socket: Socket): <span class="keyword">void</span> &#123;</div><div class="line">        <span class="keyword">if</span> (socket.token &amp;&amp; socket.token.userId) &#123;</div><div class="line">            <span class="keyword">let</span> userId: string = <span class="string">`<span class="subst">$&#123; socket.token.userId &#125;</span>`</span></div><div class="line">            <span class="keyword">this</span>.app.models.Account.findById(userId, (err: <span class="built_in">Error</span>, <span class="attr">account</span>: Account) =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'A user has been disconnected:'</span>, account.id);</div><div class="line">                account.updateAttributes(&#123; <span class="attr">connected</span>: <span class="literal">false</span>  &#125;);</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = OnDisconnect;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Creación de modelos FireLoop</title>
    <link href="http://fireloop.io/es/creating-fireloop-models/"/>
    <id>http://fireloop.io/es/creating-fireloop-models/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<p>Cuando empiece a construir un sistema, lo primero que debe hacer justo después de su instalación, es comenzar a crear sus Modelos de API.</p>
<p>Estos modelos son similares a <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> Modelos, pero con una diferencia … Estos modelos serán creados y ejecutados usando <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a> en lugar de JavaScript. (POW!)</p>
<h2 id="Creacion-de-modelos-FireLoop"><a href="#Creacion-de-modelos-FireLoop" class="headerlink" title="Creación de modelos FireLoop"></a>Creación de modelos FireLoop</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ fireloop model MyModel</div><div class="line"></div><div class="line">? Enter the model name: MyModel</div><div class="line">? Select the data-source to attach MyModel to: db (memory)</div><div class="line">? Select model<span class="string">'s base class PersistedModel</span></div><div class="line">? Expose MyModel via the REST API? Yes</div><div class="line">? Custom plural form (used to build REST URL): </div><div class="line">? Common model or server only? common</div><div class="line">Let's add some MyModel properties now.</div><div class="line"></div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: text</div><div class="line">   invoke   loopback:property</div><div class="line">? Property <span class="built_in">type</span>: string</div><div class="line">? Required? No</div><div class="line">? Default value[leave blank <span class="keyword">for</span> none]: </div><div class="line"></div><div class="line">Let<span class="string">'s add another MyModel property.</span></div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: </div><div class="line"></div><div class="line">Generating: ./common/models/my-model.ts</div></pre></td></tr></table></figure>
<p>Si usted tiene experiencia con <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> verá que es el mismo flujo creacional, es sólo que como se describió anteriormente; El modelo se creará en <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a> Language.</p>
<h2 id="Estructura-del-Modelo"><a href="#Estructura-del-Modelo" class="headerlink" title="Estructura del Modelo"></a>Estructura del Modelo</h2><p>Ahora que sus modelos están en <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a> verá que estos son diferentes en estructura a los <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>, pero tiene la misma funcionalidad exacta.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Model &#125; <span class="keyword">from</span> <span class="string">'@mean-expert/model'</span>;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @module Todo</div><div class="line"> * @description</div><div class="line"> * Write a useful Todo Model description.</div><div class="line"> * Register hooks and remote methods within the</div><div class="line"> * Model Decorator</div><div class="line"> **/</div><div class="line">@Model(&#123;</div><div class="line">  <span class="attr">hooks</span>: &#123;</div><div class="line">    <span class="attr">beforeSave</span>: &#123; <span class="attr">name</span>: <span class="string">'before save'</span>, <span class="attr">type</span>: <span class="string">'operation'</span> &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">remotes</span>: &#123;</div><div class="line">    <span class="attr">myRemote</span>: &#123;</div><div class="line">      <span class="attr">returns</span> : &#123; <span class="attr">arg</span>: <span class="string">'result'</span>, <span class="attr">type</span>: <span class="string">'array'</span> &#125;,</div><div class="line">      <span class="attr">http</span>    : &#123; <span class="attr">path</span>: <span class="string">'/my-remote'</span>, <span class="attr">verb</span>: <span class="string">'get'</span> &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Todo</span> </span>&#123;</div><div class="line">  <span class="comment">// LoopBack model instance is injected in constructor</span></div><div class="line">  <span class="keyword">constructor</span>(public model: any) &#123;&#125;</div><div class="line"></div><div class="line">  <span class="comment">// Example Operation Hook</span></div><div class="line">  beforeSave(ctx: any, <span class="attr">next</span>: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Todo: Before Save'</span>);</div><div class="line">    next();</div><div class="line">  &#125;</div><div class="line">  <span class="comment">// Example Remote Method</span></div><div class="line">  myRemote(next: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.model.find(next);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = Todo;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cuando empiece a construir un sistema, lo primero que debe hacer justo después de su instalación, es comenzar a crear sus Modelos de API.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sirviendo Aplicaciones</title>
    <link href="http://fireloop.io/es/serving-apps/"/>
    <id>http://fireloop.io/es/serving-apps/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://storage.googleapis.com/mean-expert-images/fireloop-logo.png" alt="FireLoop.io" title="">
                </div>
                <div class="image-caption">FireLoop.io</div>
            </figure>
<p><a href="http://fireloop.io">FireLoop</a> es capaz de ejecutar todas las aplicaciones de su proyecto a la vez (incluyendo su servidor), para esto puede usar el comando <code>fireloop serve</code> y seleccionar las aplicaciones que desea servir.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ fireloop serve</div><div class="line"></div><div class="line"></div><div class="line">     _-----_     </div><div class="line">    |       |    ╭──────────────────────────╮</div><div class="line">    |--(o)--|    │      Let<span class="string">'s serve an      │</span></div><div class="line">   `---------´   │       application!       │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __'.___.<span class="string">'__   </span></div><div class="line"> ´   `  |° ´ Y ` </div><div class="line"></div><div class="line">? What application do you want to serve? (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to inverse selection)</div><div class="line">❯◯ webapp</div><div class="line"> ◯ server</div></pre></td></tr></table></figure>
<p>Es importante tener en cuenta que tanto las aplicaciones de cliente como de servidor se ejecutarán en <a href="http://typescriptlang.org" target="_blank" rel="external">TypeScript</a> y se cargarán con mecanismos livereload según el entorno.</p>
<p>Esto significa que una vez que sus aplicaciones se estén ejecutando, éstas serán reiniciadas por cualquier modificación de código y recompiladas para ser recargadas en vivo.</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Escalando FireLoop</title>
    <link href="http://fireloop.io/es/scaling-fireloop/"/>
    <id>http://fireloop.io/es/scaling-fireloop/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://storage.googleapis.com/mean-expert-images/fireloop-logo.png" alt="FireLoop.io" title="">
                </div>
                <div class="image-caption">FireLoop.io</div>
            </figure>
<h2 id="Escalando-FireLoop"><a href="#Escalando-FireLoop" class="headerlink" title="Escalando FireLoop"></a>Escalando FireLoop</h2><p>Construir aplicaciones con <a href="http://fireloop.io">FireLoop</a> es agradable y fácil, pero no valdría nada si la plataforma no escalara a varios servidores o incluso procese instancias.</p>
<p>La siguiente documentación explicará cómo habilitar <a href="http://fireloop.io">FireLoop</a> para trabajar en entornos agrupados.</p>
<h2 id="Requerimientos"><a href="#Requerimientos" class="headerlink" title="Requerimientos"></a>Requerimientos</h2><ul>
<li><a href="https://github.com/mean-expert-official/loopback-sdk-builder" target="_blank" rel="external">SDK Builder</a> v2.1.0-rc.10+</li>
<li><a href="http://github.com/mean-expert-official/loopback-component-realtime" target="_blank" rel="external">LoopBack Component Real-Time</a> v1.0.0-rc.5+</li>
<li><a href="https://socket.io" target="_blank" rel="external">Socket IO</a> Adaptador <em>(cualquier socket.io-adapter como <a href="https://www.npmjs.com/package/socket.io-adapter-mongo" target="_blank" rel="external">socket.io-adapter-mongo</a>, <a href="https://www.npmjs.com/package/socket.io-redis" target="_blank" rel="external">socket.io-redis</a>, etc)</em></li>
<li>PubSub capa de base de datos como <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> o <a href="https://redis.io/" target="_blank" rel="external">Redis</a></li>
</ul>
<h2 id="Creando-el-DataSource"><a href="#Creando-el-DataSource" class="headerlink" title="Creando el DataSource"></a>Creando el DataSource</h2><p>Independientemente del origen de datos que seleccione para sus modelos de API, deberá crear una fuente de datos que apunte a una base de datos <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> o <a href="https://redis.io/" target="_blank" rel="external">Redis</a>.</p>
<p>Si ya seleccionó <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> o <a href="https://redis.io/" target="_blank" rel="external">Redis</a> como base de datos para sus Modelos de API, no necesitará crear una nueva fuente de datos, los usuarios que utilicen otras bases de datos como SQL, <em> requerirá crear una nueva fuente de datos apuntando a <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> O <a href="https://redis.io/" target="_blank" rel="external">Redis</a> </em> e instale su correspondiente dependencia de <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> to/project/api</div><div class="line">$ npm install --save [loopback-connector-mongodb | loopback-connector-redis]</div></pre></td></tr></table></figure>
<p>y como cualquier otro origen de datos <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>, se configura de la siguiente forma:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"mongodb"</span>: &#123;</div><div class="line">    <span class="attr">"url"</span>: <span class="string">"mongodb://user:pass@host:27016/dbname"</span>,</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"mongodb"</span>,</div><div class="line">    <span class="attr">"connector"</span>: <span class="string">"mongodb"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>server/datasources.json</code></p>
<h2 id="Habilitar-el-modo-Clustering"><a href="#Habilitar-el-modo-Clustering" class="headerlink" title="Habilitar el modo Clustering"></a>Habilitar el modo Clustering</h2><p>Para habilitar el modo de Clustering, necesitamos realizar las siguientes configuraciones:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"@mean-expert/loopback-component-realtime"</span>: &#123;</div><div class="line">    <span class="attr">"auth"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"debug"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"driver"</span>: &#123;</div><div class="line">      <span class="attr">"name"</span>: <span class="string">"socket.io"</span>,</div><div class="line">      <span class="attr">"options"</span>: &#123;</div><div class="line">        <span class="attr">"adapter"</span>: &#123;</div><div class="line">          <span class="attr">"name"</span>: <span class="string">"socket.io-adapter-mongo"</span>,</div><div class="line">          <span class="attr">"datasource"</span>: <span class="string">"mongodb"</span></div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Tenga en cuenta que <code>adapter.name</code> debe ser el adaptador que ha seleccionado e instalado antes de este proceso, así como el<code>adapter.datasource</code> debe ser el nombre de la fuente de datos que ha creado.</p>
<p>Después de seguir las configuraciones anteriores, <a href="http://fireloop.io">FireLoop</a> funcionará en entornos de procesos o servidores agrupados.</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ejemplo de Estatisticas RealTime</title>
    <link href="http://fireloop.io/es/realtime-stats-example/"/>
    <id>http://fireloop.io/es/realtime-stats-example/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://storage.googleapis.com/mean-expert-images/realtime-stats.jpg" alt="Real-Time" title="">
                </div>
                <div class="image-caption">Real-Time</div>
            </figure>
<h2 id="Descripcion-del-Proyecto"><a href="#Descripcion-del-Proyecto" class="headerlink" title="Descripción del Proyecto"></a>Descripción del Proyecto</h2><p>Para demostrar lo que se puede lograr con <a href="http://fireloop.io">FireLoop</a>, he decidido crear una aplicación que procese gráficos estadísticos con datos en tiempo real procedentes de un proyecto <a href="http://fireloop.io">FireLoop</a>. Este será un tipo de aplicación Todo Todo, pero esta vez vamos a fijar una fecha de vencimiento para todos nuestros, de esta manera podemos hacer alguna información estadística sobre ella y jugar mejor con ella.</p>
<h2 id="Repositorio-del-proyecto"><a href="#Repositorio-del-proyecto" class="headerlink" title="Repositorio del proyecto"></a>Repositorio del proyecto</h2><p>Para este ejemplo he creado un repositorio que puedes usar como patio de recreo.</p>
<p><a href="https://github.com/mean-expert-official/fireloop-todo-example" target="_blank" rel="external">HAGA CLIC AQUÍ PARA GITHUB REPO</a></p>
<h2 id="Instalar-FireLoop"><a href="#Instalar-FireLoop" class="headerlink" title="Instalar FireLoop"></a>Instalar FireLoop</h2><p>Por supuesto, el primer paso que queremos tomar es instalar nuestra Herramienta de CLI <a href="http://fireloop.io">FireLoop</a>.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g @mean-expert/fireloop</div></pre></td></tr></table></figure>
<h2 id="Crear-proyecto-FireLoop"><a href="#Crear-proyecto-FireLoop" class="headerlink" title="Crear proyecto FireLoop."></a>Crear proyecto FireLoop.</h2><p>Ahora que tenemos nuestra Herramienta CLI <a href="http://fireloop.io">FireLoop</a> instalada, podemos seguir adelante y crear nuestro primer proyecto <a href="http://fireloop.io">FireLoop</a>.</p>
<p>Para crear un proyecto <a href="http://fireloop.io">FireLoop</a>, necesitará crear un nuevo directorio de carpetas en cualquier ubicación de sistema de archivos de su preferencia, luego ejecutar el comando <code>$ fireloop</code> y finalmente pulsar return para todas las opciones mostradas.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">$ mkdir fireloop_project &amp;&amp; <span class="built_in">cd</span> fireloop_project</div><div class="line">$ fireloop</div><div class="line"></div><div class="line">     _-----_     ╭──────────────────────────╮</div><div class="line">    |       |    │   Welcome to FireLoop!   │</div><div class="line">    |--(o)--|    │  The MEAN Stack Platform │</div><div class="line">  \`---------´   │      by MEAN Expert      │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __<span class="string">'.___.'</span>__   </div><div class="line"> ´   `  |° ´ Y \` </div><div class="line"></div><div class="line">? What <span class="keyword">do</span> you want to <span class="keyword">do</span>? (Use arrow keys)</div><div class="line">❯ Generate FireLoop Project </div><div class="line">  Show FireLoop Version </div><div class="line"></div><div class="line"></div><div class="line">? What\<span class="string">'s the name of your application? fireloop_project</span></div><div class="line">? Which version of LoopBack would you like to use? 2.x (stable)</div><div class="line">? What kind of application do you have in mind? api-server (A LoopBack API server with local User auth)</div><div class="line"></div><div class="line">Next steps:</div><div class="line"></div><div class="line">	Create a model in your server</div><div class="line">		$ fireloop model [ModelName]</div><div class="line"></div><div class="line">	Create a new Angular 2 Client or SDK</div><div class="line">		$ fireloop</div><div class="line"></div><div class="line">	Serve an application</div><div class="line">		$ fireloop serve</div></pre></td></tr></table></figure>
<p>Genial, ahora hemos creado un proyecto <a href="http://fireloop.io">FireLoop</a> con la cantidad mínima de esfuerzo. Así que … ¿qué pasa si seguimos los consejos de los ‘próximos pasos’ y luego simplemente creamos nuestro modelo Todo.</p>
<h2 id="Crear-Modelo-Todo"><a href="#Crear-Modelo-Todo" class="headerlink" title="Crear Modelo Todo"></a>Crear Modelo Todo</h2><p>Para ello vamos a utilizar el comando <code>$ fireloop model [ModelName]</code> y luego añadir un par de propiedades.</p>
<p>Básicamente, simplemente pulsa return hasta llegar a la sección de propiedades y agrega los atributos <code>text: string &amp;&amp; dueAt: date</code>.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">$ fireloop model Todo</div><div class="line"></div><div class="line">? Enter the model name: Todo</div><div class="line">? Select the data-source to attach Todo to: db (memory)</div><div class="line">? Select model´s base class PersistedModel</div><div class="line">? Expose Todo via the REST API? Yes</div><div class="line">? Custom plural form (used to build REST URL): </div><div class="line">? Common model or server only? common</div><div class="line">Let´s add some Todo properties now.</div><div class="line"></div><div class="line"> Property text: string</div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: text</div><div class="line">? Property <span class="built_in">type</span>: string</div><div class="line">? Required? Yes</div><div class="line">? Default value[leave blank <span class="keyword">for</span> none]: </div><div class="line"></div><div class="line"> Property dueAt: date</div><div class="line">Let´s add another Todo property.</div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: dueAt</div><div class="line">? Property <span class="built_in">type</span>: date</div><div class="line">? Required? Yes</div><div class="line">? Default value[leave blank <span class="keyword">for</span> none]: </div><div class="line"></div><div class="line">Let´s add another Todo property.</div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: </div><div class="line"></div><div class="line">Generating: ./common/models/todo.ts</div></pre></td></tr></table></figure>
<p>Si ha estado usando <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>, notará que bajo el capó estoy usando el generador de loopback para esta operación, pero al final; La herramienta <a href="http://fireloop.io">FireLoop</a> CLI toma el control y creará una versión modificada de un modelo <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>. Si abre el archivo <code>. / Common / models / todo.ts</code>, encontrará la nueva estructura <a href="http://typescriptlang.org" target="_blank" rel="external">TypeScript</a> para nuestros modelos de back-end.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Model &#125; <span class="keyword">from</span> <span class="string">'@mean-expert/model'</span>;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @module Todo</div><div class="line"> * @description</div><div class="line"> * Write a useful Todo Model description.</div><div class="line"> * Register hooks and remote methods within the</div><div class="line"> * Model Decorator</div><div class="line"> **/</div><div class="line">@Model(&#123;</div><div class="line">  <span class="attr">hooks</span>: &#123;</div><div class="line">    <span class="attr">beforeSave</span>: &#123; <span class="attr">name</span>: <span class="string">'before save'</span>, <span class="attr">type</span>: <span class="string">'operation'</span> &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">remotes</span>: &#123;</div><div class="line">    <span class="attr">myRemote</span>: &#123;</div><div class="line">      <span class="attr">returns</span> : &#123; <span class="attr">arg</span>: <span class="string">'result'</span>, <span class="attr">type</span>: <span class="string">'array'</span> &#125;,</div><div class="line">      <span class="attr">http</span>    : &#123; <span class="attr">path</span>: <span class="string">'/my-remote'</span>, <span class="attr">verb</span>: <span class="string">'get'</span> &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Todo</span> </span>&#123;</div><div class="line">  <span class="comment">// LoopBack model instance is injected in constructor</span></div><div class="line">  <span class="keyword">constructor</span>(public model: any) &#123;&#125;</div><div class="line"></div><div class="line">  <span class="comment">// Example Operation Hook</span></div><div class="line">  beforeSave(ctx: any, <span class="attr">next</span>: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Todo: Before Save'</span>);</div><div class="line">    next();</div><div class="line">  &#125;</div><div class="line">  <span class="comment">// Example Remote Method</span></div><div class="line">  myRemote(next: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.model.find(next);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = Todo;</div></pre></td></tr></table></figure>
<p>Cualquier lógica relacionada con nuestro Modelo Todo en el Back-End debe colocarse en este archivo <a href="http://typescriptlang.org" target="_blank" rel="external">TypeScript</a>, aunque para esta demo lo vamos a dejar como está. Pero, lo que realmente queremos hacer es actualizar nuestras configuraciones estadísticas de Todo el Modelo.</p>
<p>Abra el archivo <code>/ common / models / todo.json</code> y actualícelos de la manera siguiente:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ...</div><div class="line">  "mixins": &#123;</div><div class="line">    ...</div><div class="line">    "Stats": [</div><div class="line">      &#123;</div><div class="line">        ...</div><div class="line">        "count": &#123;</div><div class="line">          "on": "dueAt" // &lt;---- cambia createdAt por dueAt</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Lo que estamos haciendo aquí es decir que las estadísticas se mezclan para confiar en la propiedad dueAt, de esta manera nuestra información estadística se generará de acuerdo a las fechas de entrega de todo en lugar de cuando se creó el todo</p>
<h2 id="Desactivar-la-funcion-Auth"><a href="#Desactivar-la-funcion-Auth" class="headerlink" title="Desactivar la función Auth"></a>Desactivar la función Auth</h2><p>Para este proyecto y para fines prácticos, no utilizaremos el mecanismo de autenticación ya que no quiero dedicar tiempo a crear secciones de registro / inicio de sesión, pero prometo que voy a crear un tutorial para la autenticación muy pronto.</p>
<p>Para ello, abra el archivo server/component-config.json y modifíquelo de la siguiente manera:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "loopback-component-explorer": &#123;</div><div class="line">    "mountPath": "/explorer"</div><div class="line">  &#125;,</div><div class="line">  "@mean-expert/loopback-component-realtime": &#123;</div><div class="line">    "auth": false, // &lt;--- Change this to false</div><div class="line">    "debug": false</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Ok, para este proyecto … Eso es todo lo que necesitamos hacer dentro de nuestro Back End. Ahora, es hora de crear nuestro <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> Cliente.</p>
<h2 id="Crear-cliente-Web-Angular-2"><a href="#Crear-cliente-Web-Angular-2" class="headerlink" title="Crear cliente Web Angular 2"></a>Crear cliente Web Angular 2</h2><p>Podemos crear clientes <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> usando el comando <a href="http://fireloop.io">FireLoop</a>: <code>$ fireloop</code></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ fireloop</div><div class="line"></div><div class="line">     _-----_     ╭──────────────────────────╮</div><div class="line">    |       |    │   Welcome to FireLoop!   │</div><div class="line">    |--(o)--|    │  The MEAN Stack Platform │</div><div class="line">   `---------´   │      by MEAN Expert      │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __<span class="string">'.___.'</span>__   </div><div class="line"> ´   `  |° ´ Y ` </div><div class="line"></div><div class="line">? What <span class="keyword">do</span> you want to <span class="keyword">do</span>? (Use arrow keys)</div><div class="line">❯ Generate Angular2 Client </div><div class="line"></div><div class="line">? What <span class="built_in">type</span> of Angular 2 Application <span class="keyword">do</span> you want to create? Angular 2 <span class="keyword">for</span> Web</div><div class="line">? What<span class="string">'s the name of your application? webapp</span></div></pre></td></tr></table></figure>
<p>Al seguir el proceso descrito anteriormente, suceden varias cosas bajo el capó.</p>
<ul>
<li><a href="http://fireloop.io">FireLoop</a> Internamente utiliza <a href="http://cli.angular.io" target="_blank" rel="external">Angular CLI</a> para crear un proyecto <a href="http://angular.io" target="_blank" rel="external">Angular 2</a>.</li>
<li><a href="http://fireloop.io">FireLoop</a> Genera un SDK para que su nueva aplicación cliente <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> esté totalmente conectada con su API <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>.</li>
<li><a href="http://fireloop.io">FireLoop</a> Instala el SDK y sus dependencias, incluidos los tipos.</li>
</ul>
<p>Al final del proceso no tendrá que preocuparse por ninguna integración o configuración, todo se ha hecho automáticamente para usted !!!.<br>[El público anima en el fondo :D]</p>
<h2 id="Instalar-NG2-Charts"><a href="#Instalar-NG2-Charts" class="headerlink" title="Instalar NG2 Charts"></a>Instalar NG2 Charts</h2><p>Ahora que ha evitado una buena cantidad de configuraciones e integraciones, está listo para comenzar a trabajar sobre la aplicación cliente.</p>
<p>Para este proyecto he decidido utilizar <a href="http://valor-software.com/ng2-charts/" target="_blank" rel="external">Ng2Charts</a> para procesar nuestros gráficos, pero también puedes comprobar <a href="/2016/09/17/angular-2-chart-component-revised/">Este tutorial para crear sus propios gráficos personalizados</a>.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> webapp</div><div class="line">$ npm install --save ng2-charts chart.js moment</div></pre></td></tr></table></figure>
<h4 id="Personalizacion-de-la-estructura-del-sistema-de-archivos"><a href="#Personalizacion-de-la-estructura-del-sistema-de-archivos" class="headerlink" title="Personalización de la estructura del sistema de archivos"></a>Personalización de la estructura del sistema de archivos</h4><p>Como puedes ver, debes ingresar el directorio de la aplicación web (o cualquier nombre que hayas elegido para tu aplicación) y luego instalar desde allí tus propias dependencias. Esto se debe a que aunque tengamos un espacio de trabajo para ello, queremos mantener las dependencias y los clientes reales tan desacoplados como sea posible del servidor.</p>
<p>Esto significa que no es necesario tener en 1 lugar los módulos para el servidor y los módulos para <a href="http://nativescript.org" target="_blank" rel="external">NativeScript</a> porque no tiene sentido.</p>
<p>Entonces … ¿Por qué entonces estamos creando todo dentro del mismo proyecto? La respuesta corta es por comodidad, porque recuerde que <a href="http://fireloop.io">FireLoop</a> integra para usted una solución de pila completa, lo que le permite crear automáticamente sdks para cualquiera de sus clientes y agregar funcionalidades exclusivas en tiempo real y estadística sin ninguna configuración o esfuerzo adicional.</p>
<p>Pero, si realmente no te gusta tener tu webapp o cualquier cliente dentro del mismo directorio que el proyecto <a href="http://fireloop.io">FireLoop</a>, puedes cambiarlo.</p>
<p>Simplemente abra el archivo .yo-rc.json y actualice la ruta del cliente a cualquier ubicación de su preferencia</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "generator-fireloop": &#123;</div><div class="line">    "version": "1.0.0-beta.1",</div><div class="line">    "clients": &#123;</div><div class="line">      "webapp": &#123;</div><div class="line">        "path": "./webapp", // &lt;--- Move your project out of the FireLoop directory and update the path reference here</div><div class="line">        "type": "web"</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  "generator-loopback": &#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Por supuesto, usted puede desear mover algunos de estos clientes lejos; Porque es posible que desee tener depósitos separados y sólo porque no tiene sentido tenerlo en un lugar cuando se habla de aplicaciones móviles. Sólo recuerde que todavía puede tener su servidor y los clientes integrados a través de <a href="http://fireloop.io">FireLoop</a>, independientemente del directorio del sistema de archivos.</p>
<p>De todos modos, en algunos casos tiene sentido tener todo en 1 lugar; Y el mejor de los ejemplos será la integración <a href="http://universal.angular.io" target="_blank" rel="external">Angular Universal</a>, que realmente necesita ser servida desde el servidor <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>.</p>
<p>Ok .. fresco, ahora que he aclarado cómo personalizar la estructura del proyecto, vamos a tener un poco de diversión mediante la construcción de nuestra aplicación cliente en tiempo real.</p>
<h2 id="Actualizar-el-AppModule"><a href="#Actualizar-el-AppModule" class="headerlink" title="Actualizar el AppModule"></a>Actualizar el AppModule</h2><p>En primer lugar, permite abrir el <code>fireloop_project / webapp / src / app / app.module.ts</code> y decir <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> que queremos utilizar el módulo <a href="http://valor-software.com/ng2-charts/" target="_blank" rel="external">Ng2Charts</a>.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; BrowserModule &#125; <span class="keyword">from</span> <span class="string">'@angular/platform-browser'</span>;</div><div class="line"><span class="keyword">import</span> &#123; NgModule &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; FormsModule &#125; <span class="keyword">from</span> <span class="string">'@angular/forms'</span>;</div><div class="line"><span class="keyword">import</span> &#123; SDKModule &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/index'</span>;</div><div class="line"><span class="keyword">import</span> &#123; AppComponent &#125; <span class="keyword">from</span> <span class="string">'./app.component'</span>;</div><div class="line"><span class="keyword">import</span> &#123; ChartsModule &#125; <span class="keyword">from</span> <span class="string">'ng2-charts/ng2-charts'</span>;</div><div class="line"></div><div class="line">@NgModule(&#123;</div><div class="line">  <span class="attr">declarations</span>: [</div><div class="line">    AppComponent</div><div class="line">  ],</div><div class="line">  <span class="attr">imports</span>: [</div><div class="line">    BrowserModule,</div><div class="line">    FormsModule,</div><div class="line">    SDKModule.forRoot(),</div><div class="line">    ChartsModule</div><div class="line">  ],</div><div class="line">  <span class="attr">providers</span>: [],</div><div class="line">  <span class="attr">bootstrap</span>: [AppComponent]</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppModule</span> </span>&#123; &#125;</div></pre></td></tr></table></figure>
<p>Impresionante, tan simple como que nuestra aplicación <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> está lista para empezar a representar gráficos en tiempo real.</p>
<h2 id="Agregar-logica-del-Fireloop"><a href="#Agregar-logica-del-Fireloop" class="headerlink" title="Agregar logica del Fireloop"></a>Agregar logica del Fireloop</h2><p>Permite ahora actualizar nuestro archivo <code>fireloop_project /webapp/src/app/app.component.ts</code> de la siguiente manera:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Todo, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"></div><div class="line">@Component(&#123;</div><div class="line">  <span class="attr">selector</span>: <span class="string">'app-root'</span>,</div><div class="line">  <span class="attr">templateUrl</span>: <span class="string">'./app.component.html'</span>,</div><div class="line">  <span class="attr">styleUrls</span>: [<span class="string">'./app.component.css'</span>]</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private title   : string = <span class="string">'Todo app works!'</span>;</div><div class="line">  private todo    : Todo   = <span class="keyword">new</span> Todo();</div><div class="line">  private todoRef : FireLoopRef&lt;Todo&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private rt: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.rt.onReady().subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">this</span>.todoRef = <span class="keyword">this</span>.rt.FireLoop.ref&lt;Todo&gt;(Todo);</div><div class="line">      <span class="keyword">this</span>.todoRef.stats().subscribe(<span class="function">(<span class="params">stats: any</span>) =&gt;</span> <span class="built_in">console</span>.log(stats));</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  create(): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.create(<span class="keyword">this</span>.todo).subscribe(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.todo = <span class="keyword">new</span> Todo());</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  update(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.upsert(todo).subscribe();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  remove(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.remove(todo).subscribe();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Creo que este código es bastante sencillo, básicamente sólo tiene que crear 1 Todo Modelo instancia, 1 FireLoop Reference y un par de métodos para envolver la funcionalidad, con excepción de que es cuestión de conectar las piezas juntas.</p>
<p>Si ya lo has descubierto, deberías saberlo de una manera realmente inteligente … Tienes acceso dentro de tu cliente <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> a tus modelos de backend, en este caso creamos un Todo Model que funciona a través de los extremos trasero y frontal.</p>
<p>La otra pieza súper importante de aquí es FireLoop Reference, este servicio le permite sincronizar sus aplicaciones cliente con el servidor back-end, proporcionándole métodos que le permiten crear, actualizar, eliminar, escuchar cambios y escuchar estadísticas.</p>
<p>Un buen ejemplo se puede ver dentro del constructor, estamos suscribiendo al método stats para escuchar estadísticas en tiempo real, esto es realmente genial.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">constructor</span>(private rt: RealTime) &#123;</div><div class="line">  <span class="keyword">this</span>.todoRef = <span class="keyword">this</span>.rt.FireLoop.ref&lt;Todo&gt;(Todo);</div><div class="line">  <span class="keyword">this</span>.todoRef.stats().subscribe(<span class="function">(<span class="params">stats: any</span>) =&gt;</span> <span class="built_in">console</span>.log(stats));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Es genial, cada vez que algo cambia dentro de FireLoop Todo, obtendrás información estadística sobre él, pero … En este momento estamos enviando a la consola nuestras estadísticas, vamos a agregar la lógica del gráfico.</p>
<h2 id="Agregar-logica-del-Ng2Charts"><a href="#Agregar-logica-del-Ng2Charts" class="headerlink" title="Agregar logica del Ng2Charts"></a>Agregar logica del Ng2Charts</h2><p>Lo que estoy agregando aquí es sólo la configuración estándar para un gráfico de líneas que tomé de su <a href="https://github.com/valor-software/ng2-charts" target="_blank" rel="external">documentación</a>.</p>
<p>Nuestro <code>app.component.ts</code> finalmente será algo como:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'chart.js'</span>);</div><div class="line"></div><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Todo, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> moment <span class="keyword">from</span> <span class="string">'moment'</span>;</div><div class="line"></div><div class="line">@Component(&#123;</div><div class="line">  <span class="attr">selector</span>: <span class="string">'app-root'</span>,</div><div class="line">  <span class="attr">templateUrl</span>: <span class="string">'./app.component.html'</span>,</div><div class="line">  <span class="attr">styleUrls</span>: [<span class="string">'./app.component.css'</span>]</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private title   : string = <span class="string">'Todo app works!'</span>;</div><div class="line">  private todo    : Todo   = <span class="keyword">new</span> Todo();</div><div class="line">  private todoRef : FireLoopRef&lt;Todo&gt;;</div><div class="line">  private lineChartData:<span class="built_in">Array</span>&lt;any&gt; = [];</div><div class="line">  private lineChartLabels:<span class="built_in">Array</span>&lt;any&gt; = [];</div><div class="line">  private lineChartOptions:any = &#123;</div><div class="line">    <span class="attr">animation</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">responsive</span>: <span class="literal">false</span></div><div class="line">  &#125;;</div><div class="line">  private lineChartColors:<span class="built_in">Array</span>&lt;any&gt; = [</div><div class="line">    &#123; </div><div class="line">      <span class="attr">backgroundColor</span>: <span class="string">'rgba(148,159,177,0.2)'</span>,</div><div class="line">      <span class="attr">borderColor</span>: <span class="string">'rgba(148,159,177,1)'</span>,</div><div class="line">      <span class="attr">pointBackgroundColor</span>: <span class="string">'rgba(148,159,177,1)'</span>,</div><div class="line">      <span class="attr">pointBorderColor</span>: <span class="string">'#fff'</span>,</div><div class="line">      <span class="attr">pointHoverBackgroundColor</span>: <span class="string">'#fff'</span>,</div><div class="line">      <span class="attr">pointHoverBorderColor</span>: <span class="string">'rgba(148,159,177,0.8)'</span></div><div class="line">    &#125;</div><div class="line">  ];</div><div class="line">  private lineChartLegend:boolean = <span class="literal">true</span>;</div><div class="line">  private lineChartType:string = <span class="string">'line'</span>;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private rt: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.rt.onReady().subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">this</span>.todoRef = <span class="keyword">this</span>.rt.FireLoop.ref&lt;Todo&gt;(Todo);</div><div class="line">      <span class="keyword">this</span>.todoRef.stats().subscribe(<span class="function">(<span class="params">stats: any</span>) =&gt;</span> &#123;</div><div class="line">        <span class="keyword">this</span>.lineChartLabels = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">        <span class="keyword">this</span>.lineChartData   = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">        <span class="keyword">let</span> data = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">        stats.forEach(<span class="function">(<span class="params">stat: any</span>) =&gt;</span> &#123;</div><div class="line">          data.push(stat.count);</div><div class="line">          <span class="keyword">this</span>.lineChartLabels.push(moment(stat.universal).format(<span class="string">'MM-YYYY'</span>));</div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">this</span>.lineChartData.push(&#123; <span class="attr">data</span>: data, <span class="attr">label</span>: <span class="string">'Number of Dued Todos'</span>&#125;);</div><div class="line">      &#125;);</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  create(): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.create(<span class="keyword">this</span>.todo).subscribe(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.todo = <span class="keyword">new</span> Todo());</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  update(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.upsert(todo).subscribe();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  remove(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.remove(todo).subscribe();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Aquí solo estamos agregando un par de configuraciones para decidir qué colores usar, etc. Pero deberías ser capaz de ver que ahora estamos mapeando nuestras estadísticas para ser renderizadas por <a href="http://valor-software.com/ng2-charts/" target="_blank" rel="external">Ng2Charts</a>.</p>
<h2 id="Actualizar-vista-de-componente-de-aplicacion"><a href="#Actualizar-vista-de-componente-de-aplicacion" class="headerlink" title="Actualizar vista de componente de aplicación"></a>Actualizar vista de componente de aplicación</h2><p>Permite ahora actualizar nuestro archivo <code>fireloop_project/webapp/src/app/app.component.html</code> de la siguiente manera:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></div><div class="line">  &#123;&#123;title&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> (<span class="attr">submit</span>)=<span class="string">"create()"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"todo"</span> <span class="attr">type</span>=<span class="string">"text"</span> [(<span class="attr">ngModel</span>)]=<span class="string">"todo.text"</span> <span class="attr">placeholder</span>=<span class="string">"Add Todo"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"todo"</span> <span class="attr">type</span>=<span class="string">"date"</span> [(<span class="attr">ngModel</span>)]=<span class="string">"todo.dueAt"</span> <span class="attr">placeholder</span>=<span class="string">"Due Date"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Add Todo<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> *<span class="attr">ngFor</span>=<span class="string">"let _todo of todoRef.on('change') | async"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"_todo.id"</span> [(<span class="attr">ngModel</span>)]=<span class="string">"_todo.text"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"update(_todo)"</span>&gt;</span>Update<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"remove(_todo)"</span>&gt;</span>Remove<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display: block;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">canvas</span> *<span class="attr">ngIf</span>=<span class="string">"lineChartData.length &gt; 0"</span> <span class="attr">baseChart</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span></span></div><div class="line">                [<span class="attr">datasets</span>]=<span class="string">"lineChartData"</span></div><div class="line">                [<span class="attr">labels</span>]=<span class="string">"lineChartLabels"</span></div><div class="line">                [<span class="attr">options</span>]=<span class="string">"lineChartOptions"</span></div><div class="line">                [<span class="attr">colors</span>]=<span class="string">"lineChartColors"</span></div><div class="line">                [<span class="attr">legend</span>]=<span class="string">"lineChartLegend"</span></div><div class="line">                [<span class="attr">chartType</span>]=<span class="string">"lineChartType"</span>&gt;<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Cool, ¿qué tan fácil fue eso? Simplemente enlazamos todo lo relacionado con nuestra lógica de componentes y aquí estamos, con una aplicación en tiempo real de pila completa que está lista para ser probada.</p>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Ahora ejecutamos nuestro buff de proyecto fireloop ejecutando <code>$ fireloop service</code> y luego seleccionamos ambos, tu cliente y servidor usando la barra de sapace y luego solo pulsamos return para cargarlos.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ fireloop serve</div><div class="line"></div><div class="line">     _-----_     </div><div class="line">    |       |    ╭──────────────────────────╮</div><div class="line">    |--(o)--|    │      Let<span class="string">'s serve an      │</span></div><div class="line">   `---------´   │       application!       │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __'.___.<span class="string">'__   </span></div><div class="line"> ´   `  |° ´ Y ` </div><div class="line"></div><div class="line">? What application do you want to serve? (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to inverse selection)</div><div class="line">❯◯ webapp</div><div class="line"> ◯ server</div><div class="line">  ...</div><div class="line">	Loading Client Application: webapp</div><div class="line">	Loading Server Application: server</div></pre></td></tr></table></figure>
<p>Y <em> Voilà </em> … Sólo tienes que abrir el navegador 2 en <a href="http://127.0.0.1:4200" target="_blank" rel="external">http://127.0.0.1:4200</a> para que puedas verificar que ambos se actualizan en tiempo real.</p>
<p><a href="https://storage.googleapis.com/mean-expert-images/fireloop-stats.gif" target="_blank" rel="external">FireLoop Stats Gif Example</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Creando el SDK para el Cliente</title>
    <link href="http://fireloop.io/es/creating-client-sdk/"/>
    <id>http://fireloop.io/es/creating-client-sdk/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<p>La integración <a href="http://fireloop.io">FireLoop</a> se construye en el SDK, por lo que sólo necesita generar uno e instalarlo mediante la herramienta CLI.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ fireloop</div><div class="line"></div><div class="line">     _-----_     ╭──────────────────────────╮</div><div class="line">    |       |    │   Welcome to FireLoop!   │</div><div class="line">    |--(o)--|    │  The MEAN Stack Platform │</div><div class="line">   `---------´   │      by MEAN Expert      │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __<span class="string">'.___.'</span>__   </div><div class="line"> ´   `  |° ´ Y `</div><div class="line"></div><div class="line">? What <span class="keyword">do</span> you want to <span class="keyword">do</span>? Generate Angular2 SDK</div><div class="line">? For <span class="built_in">which</span> application <span class="keyword">do</span> you want to build an SDK? (Use arrow keys)</div><div class="line">❯ webapp</div><div class="line">? What SDK features <span class="keyword">do</span> you want to include?</div><div class="line"> (*) Enable PubSub + IO + FireLoop functionality</div><div class="line">&gt;(*) Add default values <span class="keyword">in</span> models</div><div class="line">? Do you want to generate ONLY FireLoop SDK + Auth Services? (Y/n)</div></pre></td></tr></table></figure>
<p>Es importante tener en cuenta que debe [crear una aplicación] utilizando la herramienta <a href="http://fireloop.io">FireLoop</a> CLI antes de este procedimiento.</p>
<p>Además, al crear nuevos modelos <a href="http://fireloop.io">FireLoop</a>, puede que desee reconstruir el SDK para cualquiera de sus aplicaciones cliente siguiendo el mismo procedimiento que seguimos.</p>
<p>Tenga en cuenta que la opción <a href="http://fireloop.io">FireLoop</a> sólo se presentará si IO está habilitada.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;La integración &lt;a href=&quot;http://fireloop.io&quot;&gt;FireLoop&lt;/a&gt; se construye en el SDK, por lo que sólo necesita generar uno e instalarlo median
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hola Mundo</title>
    <link href="http://fireloop.io/es/hello-world/"/>
    <id>http://fireloop.io/es/hello-world/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<p>Bienvenido a [Hexo] (<a href="https://hexo.io/)!" target="_blank" rel="external">https://hexo.io/)!</a> Este es tu primer post. Consulte [documentación] (<a href="https://hexo.io/docs/" target="_blank" rel="external">https://hexo.io/docs/</a>) para obtener más información. Si tienes algún problema al usar Hexo, puedes encontrar la respuesta en [solución de problemas] (<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">https://hexo.io/docs/troubleshooting.html</a>) o puedes preguntarme sobre [GitHub] (<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">https://github.com/hexojs/hexo/issues</a>).</p>
<h2 id="Inicio-rapido"><a href="#Inicio-rapido" class="headerlink" title="Inicio rapido"></a>Inicio rapido</h2><h3 id="Crear-un-nuevo-post"><a href="#Crear-un-nuevo-post" class="headerlink" title="Crear un nuevo post"></a>Crear un nuevo post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"Mi nuevo post"</span></div></pre></td></tr></table></figure>
<p>Mas info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Correr-Servidor"><a href="#Correr-Servidor" class="headerlink" title="Correr Servidor"></a>Correr Servidor</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>Mas info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generar-Archivos-Estaticos"><a href="#Generar-Archivos-Estaticos" class="headerlink" title="Generar Archivos Estaticos"></a>Generar Archivos Estaticos</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>Mas info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-a-sitios-remotos"><a href="#Deploy-a-sitios-remotos" class="headerlink" title="Deploy a sitios remotos"></a>Deploy a sitios remotos</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>Mas info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bienvenido a [Hexo] (&lt;a href=&quot;https://hexo.io/)!&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/)!&lt;/a&gt; Este es tu primer post. Consulte 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Inicio Rapido</title>
    <link href="http://fireloop.io/es/getting-started/"/>
    <id>http://fireloop.io/es/getting-started/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://fireloop.io">FireLoop</a> Es una Plataforma en Real-time para <a href="http://nodejs.org" target="_blank" rel="external">NodeJS</a> que le permite crear aplicaciones modernas y complejas integrando a la perfección las sorprendentes tecnologias de MEAN Stack como frameworks IBM <a href="http://loopback.io" target="_blank" rel="external">Loopback</a>, Google <a href="http://angular.io" target="_blank" rel="external">Angular 2</a>, Telerik’s <a href="http://nativescript.org" target="_blank" rel="external">NativeScript 2</a> y <a href="http://ionic.io" target="_blank" rel="external">Ionic 2</a></p>
<p><a href="http://fireloop.io">FireLoop</a> También le ofrece módulos exclusivos que le permitirán crear automáticamente sus APIs en tiempo real, los SDKs de clientes, las estadísticas como <a href="https://firebase.google.com/" target="_blank" rel="external">FireBase</a>, <strong>Backend y Frontend desarrollado en <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a>!!!</strong>.</p>
<p><em>Por cierto, es fresco y de código abierto!!!</em></p>
<h3 id="Instalacion"><a href="#Instalacion" class="headerlink" title="Instalacion"></a>Instalacion</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g @mean-expert/fireloop</div></pre></td></tr></table></figure>
<h3 id="Caracteristicas-de-FireLoop"><a href="#Caracteristicas-de-FireLoop" class="headerlink" title="Características de FireLoop"></a>Características de FireLoop</h3><ul>
<li>Configuración agradable y fácil.</li>
<li>1 herramienta de línea de comandos para todos (Server, Web Clients, Mobile Clients, SDK Builder).</li>
<li>Back y Front en <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a>.</li>
<li>Integracion con <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> 2 y 3.</li>
<li>Integracion con <a href="http://angular.io" target="_blank" rel="external">Angular 2</a>.</li>
<li>Integracion con <a href="http://nativescript.org" target="_blank" rel="external">NativeScript 2</a>.</li>
<li>Integracion con <a href="http://ionic.io" target="_blank" rel="external">Ionic 2</a>. </li>
<li>Integracion con <a href="https://github.com/mean-expert-official/loopback-sdk-builder" target="_blank" rel="external">SDK Builder</a>.</li>
<li>Integracion con <a href="https://github.com/mean-expert-official/loopback-component-realtime" target="_blank" rel="external">Real-Time</a>.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://fireloop.io&quot;&gt;FireLoop&lt;/a&gt; Es una Plataforma en Real-time para &lt;a href=&quot;http://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Api</title>
    <link href="http://fireloop.io/es/api/"/>
    <id>http://fireloop.io/es/api/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Debería [crear una aplicación] y <a href="https://github.com/mean-expert-official/fireloop.io/wiki/Creating-Client-SDK" target="_blank" rel="external">software development kit</a> utilizando la Herramienta de CLI <a href="http://fireloop.io">FireLoop</a> antes de poder utilizar la siguiente API.</p>
</blockquote>
<h2 id="Importacion-de-servicio-RealTime"><a href="#Importacion-de-servicio-RealTime" class="headerlink" title="Importación de servicio RealTime"></a>Importación de servicio RealTime</h2><p>El <a href="http://github.com/mean-expert-official/loopback-sdk-builder" target="_blank" rel="external">LoopBack SDK Builder</a> generará y proporcionará un servicio <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> que se puede inyectar dentro de nuestro constructor de la siguiente manera:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime.FireLoop <span class="comment">// explore with intellisense</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Esperando-la-conexion"><a href="#Esperando-la-conexion" class="headerlink" title="Esperando la conexión"></a>Esperando la conexión</h2><p>Al utilizar cualquier característica en tiempo real, primero debe asegurarse de que su aplicación cliente está conectada con el servidor a través de sockets web.</p>
<p>El siguiente ejemplo ilustra cómo esperar a que se establezca una conexión mediante el método <code>onReady</code>.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">            <span class="comment">// Register FireLoop References in here....</span></div><div class="line">        &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Como-crear-datos"><a href="#Como-crear-datos" class="headerlink" title="Cómo crear datos"></a>Cómo crear datos</h2><p>El siguiente ejemplo creará una nueva instancia de sala a través de la nueva API <a href="http://fireloop.io">FireLoop</a> utilizando WebSockets en lugar del protocolo API de REST de HTTP estándar <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private room: Room = <span class="keyword">new</span> Room(&#123; <span class="attr">name</span>: <span class="string">'Hello FireLoop Room'</span> &#125;);</div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line">  </div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">  create(): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.RoomReference.create(<span class="keyword">this</span>.room).subscribe(<span class="function">(<span class="params">instance: Room</span>) =&gt;</span> <span class="built_in">console</span>.log(instance));</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Siempre habrá una nueva instancia creada después de usar el método <code>create</code>, pero también puede usar<code>upsert</code> que <code>create</code> o el <code>update</code> de la instancia.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private room: Room = <span class="keyword">new</span> Room(&#123; <span class="attr">name</span>: <span class="string">'Hello FireLoop Room'</span> &#125;);</div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  upsert(): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.RoomReference.upsert(<span class="keyword">this</span>.room).subscribe(<span class="function">(<span class="params">instance: Room</span>) =&gt;</span> <span class="built_in">console</span>.log(instance));</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Utilizando upsert, <a href="http://fireloop.io">FireLoop</a> comprobará si el elemento ya se ha persistido y lo actualiza, de lo contrario creará una nueva instancia.</p>
<h2 id="Como-quitar-datos"><a href="#Como-quitar-datos" class="headerlink" title="Cómo quitar datos"></a>Cómo quitar datos</h2><p>El ejemplo siguiente eliminará una instancia de sala a través de la nueva API <a href="http://fireloop.io">FireLoop</a> que usa WebSockets.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private room: Room = <span class="keyword">new</span> Room(&#123; <span class="attr">name</span>: <span class="string">'Hello FireLoop Room'</span> &#125;);</div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  remove(room: Room): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.RoomReference.remove(room).subscribe(<span class="function">(<span class="params">removed: Room</span>) =&gt;</span> &#123;&#125;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Eventos-disponibles"><a href="#Eventos-disponibles" class="headerlink" title="Eventos disponibles"></a>Eventos disponibles</h2><table>
<thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>change</td>
<td>Este evento devolverá una matriz de elementos persistentes y continuará disparando en cualquier cambio para la referencia de modelo actual.</td>
</tr>
<tr>
<td>value</td>
<td>Este evento devolverá una matriz de elementos persistentes y continuará disparando cuando se agreguen nuevos valores en la referencia de modelo actual.</td>
</tr>
<tr>
<td>child_changed</td>
<td>Este evento se disparará una vez por cada elemento persistido y continuará disparando cuando se agreguen nuevos valores en la Referencia del Modelo actual, devolviendo sólo el elemento hijo recién creado</td>
</tr>
<tr>
<td>child_removed</td>
<td>Este evento se disparará una vez para cada elemento cambiado</td>
</tr>
</tbody>
</table>
<h2 id="Leer-datos-utilizando-el-evento-‘change’"><a href="#Leer-datos-utilizando-el-evento-‘change’" class="headerlink" title="Leer datos utilizando el evento ‘change’"></a>Leer datos utilizando el evento ‘change’</h2><p>Este es el evento de lectura recomendado para las listas en tiempo real porque estará sincronizado en cualquier momento en que haya una modificación de referencia; Esto significa que en cualquier adición, eliminación o modificación de cualquier niño dentro de la referencia activará una sincronización de cliente.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">            <span class="keyword">this</span>.RoomReference.on(<span class="string">'change'</span>).subscribe(<span class="function">(<span class="params">rooms: <span class="built_in">Array</span>&lt;Room&gt;</span>) =&gt;</span> <span class="built_in">console</span>.log(rooms));</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Leer-datos-utilizando-el-evento-‘value’"><a href="#Leer-datos-utilizando-el-evento-‘value’" class="headerlink" title="Leer datos utilizando el evento ‘value’"></a>Leer datos utilizando el evento ‘value’</h2><p>Similar a Firebase, ahora puede escuchar los cambios de referencias suscribiéndose al evento <code>value</code>.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">            <span class="keyword">this</span>.RoomReference.on(<span class="string">'value'</span>).subscribe(<span class="function">(<span class="params">rooms: <span class="built_in">Array</span>&lt;Room&gt;</span>) =&gt;</span> <span class="built_in">console</span>.log(rooms));</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>El ejemplo anterior lista los elementos persistentes (Salas) la primera vez y continuará disparando cada vez que haya un nuevo valor agregado.</p>
<p>Cuando no se define la consulta, el evento <code>value</code> devolverá los últimos 100 registros de la base de datos.</p>
<h2 id="Escucha-el-evento-‘child-added’"><a href="#Escucha-el-evento-‘child-added’" class="headerlink" title="Escucha el evento ‘child_added’"></a>Escucha el evento ‘child_added’</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">            <span class="keyword">this</span>.RoomReference.on(<span class="string">'child_added'</span>).subscribe(<span class="function">(<span class="params">room: Room</span>) =&gt;</span> <span class="built_in">console</span>.log(room));</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Escucha-el-evento-‘child-changed’"><a href="#Escucha-el-evento-‘child-changed’" class="headerlink" title="Escucha el evento ‘child_changed’"></a>Escucha el evento ‘child_changed’</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">            <span class="keyword">this</span>.RoomReference.on(<span class="string">'child_changed'</span>).subscribe(<span class="function">(<span class="params">room: Room</span>) =&gt;</span> <span class="built_in">console</span>.log(room));</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Escucha-el-evento-‘child-removed’"><a href="#Escucha-el-evento-‘child-removed’" class="headerlink" title="Escucha el evento ‘child_removed’"></a>Escucha el evento ‘child_removed’</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">            <span class="keyword">this</span>.RoomReference.on(<span class="string">'child_removed'</span>).subscribe(<span class="function">(<span class="params">room: Room</span>) =&gt;</span> <span class="built_in">console</span>.log(room));</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Consultar-datos"><a href="#Consultar-datos" class="headerlink" title="Consultar datos"></a>Consultar datos</h2><p>Desde el construido en <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> Query Language es realmente maduro, decidí seguir usando para permitir que tire de la información de acuerdo a sus necesidades.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">            <span class="keyword">this</span>.RoomReference.on(<span class="string">'change'</span>,&#123;</div><div class="line">              <span class="attr">limit</span>: <span class="number">10</span>,</div><div class="line">              <span class="attr">order</span>: <span class="string">'id DESC'</span>,</div><div class="line">              <span class="attr">include</span>: <span class="string">'members'</span></div><div class="line">            &#125;).subscribe(<span class="function">(<span class="params">rooms: Room[]</span>) =&gt;</span> <span class="built_in">console</span>.log(rooms));</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Para obtener más información acerca de cómo consultar datos, consulte la siguiente  <a href="https://docs.strongloop.com/display/public/LB/Querying+data" target="_blank" rel="external">documentation</a></p>
<h2 id="Trabajar-con-referencias-de-Child"><a href="#Trabajar-con-referencias-de-Child" class="headerlink" title="Trabajar con referencias de Child"></a>Trabajar con referencias de Child</h2><p>Trabajar con referencias Child le permitirá persistir una relación entre un padre y una referencia de niño. Por ejemplo, al crear mensajes en una sala de chat, queremos que se persistan dentro de la habitación correcta.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Room, Message, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"></div><div class="line">@Component(...)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private RoomReference: FireLoopRef&lt;Room&gt;;</div><div class="line">  private MessageReference: FireLoopRef&lt;Message&gt;;</div><div class="line">  private room: Room = <span class="keyword">new</span> Room(&#123; <span class="attr">name</span>: <span class="string">'FireLoop Room'</span> &#125;);</div><div class="line">  private message: Room = <span class="keyword">new</span> Message(&#123; <span class="attr">text</span>: <span class="string">'Test Message'</span> &#125;);</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private realTime: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.realTime</div><div class="line">        .onReady()</div><div class="line">        .subscribe(<span class="function"><span class="params">()</span> =&gt;</span></div><div class="line">            <span class="keyword">this</span>.RoomReference = <span class="keyword">this</span>.realTime.FireLoop.ref&lt;Room&gt;(Room)</div><div class="line">            <span class="keyword">this</span>.RoomReference.upsert(<span class="keyword">this</span>.room).subscribe(<span class="function">(<span class="params">instance: Room</span>) =&gt;</span> &#123;</div><div class="line">             <span class="comment">// Create a Child Reference</span></div><div class="line">             <span class="keyword">this</span>.MessageReference = RoomReference.make(instance).child&lt;Message&gt;(<span class="string">'messages'</span>);</div><div class="line">             <span class="keyword">this</span>.MessageReference.on(<span class="string">'value'</span>).subscribe(</div><div class="line">                <span class="function">(<span class="params">messages: <span class="built_in">Array</span>&lt;Message&gt;</span>) =&gt;</span> <span class="keyword">this</span>.logger.info(messages)</div><div class="line">              );</div><div class="line">              MessageReference.upsert(<span class="keyword">this</span>.message).subscribe(<span class="function">(<span class="params">res: Message</span>) =&gt;</span> <span class="built_in">console</span>.log(res.text));</div><div class="line">            &#125;))</div><div class="line">        );</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>El ejemplo anterior creará una nueva Sala y luego creará una MessageReference, ahora puede almacenar o escuchar mensajes dentro de esta sala específica. Todo lo relacionado con esta referencia persistirá la relación Parent -&gt; Child.</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Debería [crear una aplicación] y &lt;a href=&quot;https://github.com/mean-expert-official/fireloop.io/wiki/Creating-Client-SDK&quot; targ
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tabla de comparación</title>
    <link href="http://fireloop.io/es/comparison-table/"/>
    <id>http://fireloop.io/es/comparison-table/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tabla-de-comparacion"><a href="#Tabla-de-comparacion" class="headerlink" title="Tabla de comparación"></a>Tabla de comparación</h2><table>
<thead>
<tr>
<th>Plataforma</th>
<th>Meteor</th>
<th>Horizon</th>
<th>FireBase</th>
<th>FireLoop</th>
</tr>
</thead>
<tbody>
<tr>
<td>Description</td>
<td>Plataforma de código abierto para web, móvil y escritorio.</td>
<td>Real-time platform built on top of RethinkDB.</td>
<td>BackEnd as A Service para el desarrollo de aplicaciones clientes</td>
<td>plataforma en Real-time basada en LoopBack and Express.js.</td>
</tr>
<tr>
<td>Real-Time</td>
<td>Si</td>
<td>Si</td>
<td>Si</td>
<td>Si</td>
</tr>
<tr>
<td>UI Components</td>
<td>Si</td>
<td>No</td>
<td>No</td>
<td>No UI pero WebRTC Componentes para Angular 2 están en desarrollo.</td>
</tr>
<tr>
<td>Client SDK</td>
<td>Monolithic</td>
<td>JavaScript Client</td>
<td>SDKs para diferentes lenguajes</td>
<td>Full tipado Angular 2 SDK</td>
</tr>
<tr>
<td>Extensibilidad</td>
<td>Meteor Modules</td>
<td>Todavía no implementado Mecanismo de complemento o pluguin</td>
<td>Nope</td>
<td>Isomorphica (Universal) Models, Hooks, Mixins y  Componentes.</td>
</tr>
<tr>
<td>Escalabilidad</td>
<td>Usa MongoDB OpLog</td>
<td>Usa RethinkDB</td>
<td>Escalado automático</td>
<td>Arquitectura impulsada por adaptador o driver (Options: MongoDB PubSub, Redis, Kafka, Build your own driver)</td>
</tr>
<tr>
<td>Madurez</td>
<td>Very mature</td>
<td>No es tan madura, muchas piezas no están en su lugar</td>
<td>Muy madura</td>
<td>Madura ya que se basa en LoopBack Maturity plus Modern Community Modules.</td>
</tr>
<tr>
<td>Open Source</td>
<td>Si</td>
<td>Si</td>
<td>No</td>
<td>Si</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Tabla-de-comparacion&quot;&gt;&lt;a href=&quot;#Tabla-de-comparacion&quot; class=&quot;headerlink&quot; title=&quot;Tabla de comparación&quot;&gt;&lt;/a&gt;Tabla de comparación&lt;/h2&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Creación de aplicaciones cliente</title>
    <link href="http://fireloop.io/es/creating-client-apps/"/>
    <id>http://fireloop.io/es/creating-client-apps/</id>
    <published>2017-05-04T21:13:32.975Z</published>
    <updated>2017-05-04T21:13:32.975Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ fireloop</div><div class="line">? What <span class="keyword">do</span> you want to <span class="keyword">do</span>? Generate Angular2 Client</div><div class="line"></div><div class="line">     _-----_     </div><div class="line">    |       |    ╭──────────────────────────╮</div><div class="line">    |--(o)--|    │ Lets<span class="string">'s create an Angular │</span></div><div class="line">   `---------´   │      2 Application!      │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __'.___.<span class="string">'__   </span></div><div class="line"> ´   `  |° ´ Y ` </div><div class="line"></div><div class="line">? What type of Angular 2 Application do you want to create? 1.- Angular 2 Web</div><div class="line">? What's the name of your application? (webapp)</div></pre></td></tr></table></figure>
<p>Una vez creada su aplicación, automáticamente habrá instalado su [kit de desarrollo de software], pero cada vez que [cree un nuevo modelo]; Deberá volver a crear su SDK siguiendo estas instrucciones.</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Creating Client SDK</title>
    <link href="http://fireloop.io/en/creating-client-sdk/"/>
    <id>http://fireloop.io/en/creating-client-sdk/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<p>The <a href="http://fireloop.io">FireLoop</a> integration is built in the SDK, so you just need to generate one and install it by using the CLI Tool.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ fireloop</div><div class="line"></div><div class="line">     _-----_     ╭──────────────────────────╮</div><div class="line">    |       |    │   Welcome to FireLoop!   │</div><div class="line">    |--(o)--|    │  The MEAN Stack Platform │</div><div class="line">   `---------´   │      by MEAN Expert      │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __<span class="string">'.___.'</span>__   </div><div class="line"> ´   `  |° ´ Y `</div><div class="line"></div><div class="line">? What <span class="keyword">do</span> you want to <span class="keyword">do</span>? Generate Angular2 SDK</div><div class="line">? For <span class="built_in">which</span> application <span class="keyword">do</span> you want to build an SDK? (Use arrow keys)</div><div class="line">❯ webapp</div><div class="line">? What SDK features <span class="keyword">do</span> you want to include?</div><div class="line"> (*) Enable PubSub + IO + FireLoop functionality</div><div class="line">&gt;(*) Add default values <span class="keyword">in</span> models</div><div class="line">? Do you want to generate ONLY FireLoop SDK + Auth Services? (Y/n)</div></pre></td></tr></table></figure>
<p>It is important to note that you should <a href="https://github.com/mean-expert-official/fireloop.io/wiki/Creating-Client-Applications" target="_blank" rel="external">create an application</a> by using the <a href="http://fireloop.io">FireLoop</a> CLI Tool prior this procedure.</p>
<p>Also, when you create new <a href="http://fireloop.io">FireLoop</a> Models, you may want to rebuild the SDK for any of your client applications using the same procedure we just followed.</p>
<p>Note that the <a href="http://fireloop.io">FireLoop</a> option will only be presented if IO is enabled.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The &lt;a href=&quot;http://fireloop.io&quot;&gt;FireLoop&lt;/a&gt; integration is built in the SDK, so you just need to generate one and install it by using t
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Comparison Table</title>
    <link href="http://fireloop.io/en/comparison-table/"/>
    <id>http://fireloop.io/en/comparison-table/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Comparison-Table"><a href="#Comparison-Table" class="headerlink" title="Comparison Table"></a>Comparison Table</h2><table>
<thead>
<tr>
<th>Platform</th>
<th>Meteor</th>
<th>Horizon</th>
<th>FireBase</th>
<th>FireLoop</th>
</tr>
</thead>
<tbody>
<tr>
<td>Description</td>
<td>Open source platform for web, mobile and desktop.</td>
<td>Real-time platform built on top of RethinkDB.</td>
<td>BaaS Cloud platform for fast development of client Applications.</td>
<td>Real-time platform built on top of LoopBack and Express.js.</td>
</tr>
<tr>
<td>Real-Time</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>UI Components</td>
<td>Yes</td>
<td>No</td>
<td>No</td>
<td>Not UI but WebRTC Components for Angular 2 are under development.</td>
</tr>
<tr>
<td>Client SDK</td>
<td>Monolithic</td>
<td>JavaScript Client</td>
<td>SDKs for different languages</td>
<td>Fully Typed Angular 2 SDK</td>
</tr>
<tr>
<td>Extensibility</td>
<td>Meteor Modules</td>
<td>Not yet implemented Plug-In mechanism</td>
<td>None</td>
<td>Isomorphic (Universal) Models, Hooks, Mixins and Components.</td>
</tr>
<tr>
<td>Scalability</td>
<td>Uses MongoDB OpLog</td>
<td>Uses RethinkDB</td>
<td>Auto-scaling</td>
<td>Adapter Driven Architecture (Options: MongoDB PubSub, Redis, Kafka, Build your own driver)</td>
</tr>
<tr>
<td>Maturity</td>
<td>Very mature</td>
<td>Not so mature, many pieces are not in place</td>
<td>Very Mature</td>
<td>Mature since it relies on LoopBack Maturity plus Modern Community Modules.</td>
</tr>
<tr>
<td>Open Source</td>
<td>Yes</td>
<td>Yes</td>
<td>No</td>
<td>Yes</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Comparison-Table&quot;&gt;&lt;a href=&quot;#Comparison-Table&quot; class=&quot;headerlink&quot; title=&quot;Comparison Table&quot;&gt;&lt;/a&gt;Comparison Table&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Scaling FireLoop</title>
    <link href="http://fireloop.io/en/scaling-fireloop/"/>
    <id>http://fireloop.io/en/scaling-fireloop/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://storage.googleapis.com/mean-expert-images/fireloop-logo.png" alt="FireLoop.io" title="">
                </div>
                <div class="image-caption">FireLoop.io</div>
            </figure>
<h2 id="Scaling-FireLoop"><a href="#Scaling-FireLoop" class="headerlink" title="Scaling FireLoop"></a>Scaling FireLoop</h2><p>Building apps with <a href="http://fireloop.io">FireLoop</a> is nice and easy, but that would be worthless if the platform wouldn’t scale into multiple server or even process instances.</p>
<p>The following documentation will explain how to enable <a href="http://fireloop.io">FireLoop</a> to work under clustered environments.</p>
<h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul>
<li><a href="https://github.com/mean-expert-official/loopback-sdk-builder" target="_blank" rel="external">SDK Builder</a> v2.1.0-rc.10+</li>
<li><a href="http://github.com/mean-expert-official/loopback-component-realtime" target="_blank" rel="external">LoopBack Component Real-Time</a> v1.0.0-rc.5+</li>
<li><a href="https://socket.io" target="_blank" rel="external">Socket IO</a> Adapter <em>(Any valid socket.io-adapter like <a href="https://www.npmjs.com/package/socket.io-adapter-mongo" target="_blank" rel="external">socket.io-adapter-mongo</a>, <a href="https://www.npmjs.com/package/socket.io-redis" target="_blank" rel="external">socket.io-redis</a>, etc)</em></li>
<li>PubSub capable database like <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> or <a href="https://redis.io/" target="_blank" rel="external">Redis</a></li>
</ul>
<h2 id="Creating-DataSource"><a href="#Creating-DataSource" class="headerlink" title="Creating DataSource"></a>Creating DataSource</h2><p>Regardless the datasource you select for your API Models, you will need to create a datasource pointing to a <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> or <a href="https://redis.io/" target="_blank" rel="external">Redis</a> database.</p>
<p>If you already selected <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> or <a href="https://redis.io/" target="_blank" rel="external">Redis</a> database for your API Models, you won’t need to create a new datasource, users using any other databases like SQL ones, <em>will require to create a new datasource pointing to <a href="https://www.mongodb.com/" target="_blank" rel="external">MongoDB</a> or <a href="https://redis.io/" target="_blank" rel="external">Redis</a></em> and install its <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> dependency.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> to/project/api</div><div class="line">$ npm install --save [loopback-connector-mongodb | loopback-connector-redis]</div></pre></td></tr></table></figure>
<p>and configure as any other <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> datasource, example:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"mongodb"</span>: &#123;</div><div class="line">    <span class="attr">"url"</span>: <span class="string">"mongodb://user:pass@host:27016/dbname"</span>,</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"mongodb"</span>,</div><div class="line">    <span class="attr">"connector"</span>: <span class="string">"mongodb"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>server/datasources.json</code></p>
<h2 id="Enable-Clustering-Mode"><a href="#Enable-Clustering-Mode" class="headerlink" title="Enable Clustering Mode"></a>Enable Clustering Mode</h2><p>In order to enable the clustering mode, we need to set the following configurations:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"@mean-expert/loopback-component-realtime"</span>: &#123;</div><div class="line">    <span class="attr">"auth"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">"debug"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">"driver"</span>: &#123;</div><div class="line">      <span class="attr">"name"</span>: <span class="string">"socket.io"</span>,</div><div class="line">      <span class="attr">"options"</span>: &#123;</div><div class="line">        <span class="attr">"adapter"</span>: &#123;</div><div class="line">          <span class="attr">"name"</span>: <span class="string">"socket.io-adapter-mongo"</span>,</div><div class="line">          <span class="attr">"datasource"</span>: <span class="string">"mongodb"</span></div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Please note that the <code>adapter.name</code> should be the adapter you selected and installed prior this process, as well as the <code>adapter.datasource</code> should be the name of the datasource you created.</p>
<p>After following the configurations above, <a href="http://fireloop.io">FireLoop</a> will work either on clustered process or server environments.</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Real Time Stats Example</title>
    <link href="http://fireloop.io/en/realtime-stats-example/"/>
    <id>http://fireloop.io/en/realtime-stats-example/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://storage.googleapis.com/mean-expert-images/realtime-stats.jpg" alt="Real-Time" title="">
                </div>
                <div class="image-caption">Real-Time</div>
            </figure>
<h2 id="Project-Description"><a href="#Project-Description" class="headerlink" title="Project Description"></a>Project Description</h2><p>To demonstrate what can be achieved with <a href="http://fireloop.io">FireLoop</a>, I have decided to create an application that will render statistical charts with real-time data coming from a <a href="http://fireloop.io">FireLoop</a> project. This will be kind of a regular Todo Application, but this time we will set a due date for our todos, this way we can render some statistical information about it and play better with it.</p>
<h2 id="Project-Repository"><a href="#Project-Repository" class="headerlink" title="Project Repository"></a>Project Repository</h2><p>For this example I have created a repository that you can use as playground.</p>
<p><a href="https://github.com/mean-expert-official/fireloop-todo-example" target="_blank" rel="external">CLICK HERE FOR GITHUB REPO</a></p>
<h2 id="Install-FireLoop"><a href="#Install-FireLoop" class="headerlink" title="Install FireLoop"></a>Install FireLoop</h2><p>Of course, the very first step we’ll want to take, is to install our <a href="http://fireloop.io">FireLoop</a> CLI Tool.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g @mean-expert/fireloop</div></pre></td></tr></table></figure>
<h2 id="Create-FireLoop-Project"><a href="#Create-FireLoop-Project" class="headerlink" title="Create FireLoop Project"></a>Create FireLoop Project</h2><p>Now that we have our <a href="http://fireloop.io">FireLoop</a> CLI Tool installed, we can go ahead and create our first <a href="http://fireloop.io">FireLoop</a> Project.</p>
<p>In order to create a <a href="http://fireloop.io">FireLoop</a> Project, you will need to create a new folder directory in any file system location of your preference, then run the <code>$ fireloop</code> command and finally hit return for all of the displayed options.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">$ mkdir fireloop_project &amp;&amp; <span class="built_in">cd</span> fireloop_project</div><div class="line">$ fireloop</div><div class="line"></div><div class="line">     _-----_     ╭──────────────────────────╮</div><div class="line">    |       |    │   Welcome to FireLoop!   │</div><div class="line">    |--(o)--|    │  The MEAN Stack Platform │</div><div class="line">  \`---------´   │      by MEAN Expert      │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __<span class="string">'.___.'</span>__   </div><div class="line"> ´   `  |° ´ Y \` </div><div class="line"></div><div class="line">? What <span class="keyword">do</span> you want to <span class="keyword">do</span>? (Use arrow keys)</div><div class="line">❯ Generate FireLoop Project </div><div class="line">  Show FireLoop Version </div><div class="line"></div><div class="line"></div><div class="line">? What\<span class="string">'s the name of your application? fireloop_project</span></div><div class="line">? Which version of LoopBack would you like to use? 2.x (stable)</div><div class="line">? What kind of application do you have in mind? api-server (A LoopBack API server with local User auth)</div><div class="line"></div><div class="line">Next steps:</div><div class="line"></div><div class="line">	Create a model in your server</div><div class="line">		$ fireloop model [ModelName]</div><div class="line"></div><div class="line">	Create a new Angular 2 Client or SDK</div><div class="line">		$ fireloop</div><div class="line"></div><div class="line">	Serve an application</div><div class="line">		$ fireloop serve</div></pre></td></tr></table></figure>
<p>Great, now we have created a <a href="http://fireloop.io">FireLoop</a> Project with the minimum amount of effort. So… what if we follow the <code>Next Steps</code> tips and then we just create our Todo Model.</p>
<h2 id="Create-Todo-Model"><a href="#Create-Todo-Model" class="headerlink" title="Create Todo Model"></a>Create Todo Model</h2><p>For this we are going to use the <code>$ fireloop model [ModelName]</code> command and then add a couple of properties.</p>
<p>Basically you just hit return until you reach the properties section and you add the <code>text: string &amp;&amp; dueAt: date</code> attributes.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">$ fireloop model Todo</div><div class="line"></div><div class="line">? Enter the model name: Todo</div><div class="line">? Select the data-source to attach Todo to: db (memory)</div><div class="line">? Select model´s base class PersistedModel</div><div class="line">? Expose Todo via the REST API? Yes</div><div class="line">? Custom plural form (used to build REST URL): </div><div class="line">? Common model or server only? common</div><div class="line">Let´s add some Todo properties now.</div><div class="line"></div><div class="line"> Property text: string</div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: text</div><div class="line">? Property <span class="built_in">type</span>: string</div><div class="line">? Required? Yes</div><div class="line">? Default value[leave blank <span class="keyword">for</span> none]: </div><div class="line"></div><div class="line"> Property dueAt: date</div><div class="line">Let´s add another Todo property.</div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: dueAt</div><div class="line">? Property <span class="built_in">type</span>: date</div><div class="line">? Required? Yes</div><div class="line">? Default value[leave blank <span class="keyword">for</span> none]: </div><div class="line"></div><div class="line">Let´s add another Todo property.</div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: </div><div class="line"></div><div class="line">Generating: ./common/models/todo.ts</div></pre></td></tr></table></figure>
<p>If you have been using <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>, you will notice that under the hood I’m using the loopback generator for this operation, but at the end; The <a href="http://fireloop.io">FireLoop</a> CLI Tool takes control and it will create a modified version of a <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> Model. If you open the <code>./common/models/todo.ts</code> file, you will find the new <a href="http://typescriptlang.org" target="_blank" rel="external">TypeScript</a> structure for our Back End Models.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Model &#125; <span class="keyword">from</span> <span class="string">'@mean-expert/model'</span>;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @module Todo</div><div class="line"> * @description</div><div class="line"> * Write a useful Todo Model description.</div><div class="line"> * Register hooks and remote methods within the</div><div class="line"> * Model Decorator</div><div class="line"> **/</div><div class="line">@Model(&#123;</div><div class="line">  <span class="attr">hooks</span>: &#123;</div><div class="line">    <span class="attr">beforeSave</span>: &#123; <span class="attr">name</span>: <span class="string">'before save'</span>, <span class="attr">type</span>: <span class="string">'operation'</span> &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">remotes</span>: &#123;</div><div class="line">    <span class="attr">myRemote</span>: &#123;</div><div class="line">      <span class="attr">returns</span> : &#123; <span class="attr">arg</span>: <span class="string">'result'</span>, <span class="attr">type</span>: <span class="string">'array'</span> &#125;,</div><div class="line">      <span class="attr">http</span>    : &#123; <span class="attr">path</span>: <span class="string">'/my-remote'</span>, <span class="attr">verb</span>: <span class="string">'get'</span> &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Todo</span> </span>&#123;</div><div class="line">  <span class="comment">// LoopBack model instance is injected in constructor</span></div><div class="line">  <span class="keyword">constructor</span>(public model: any) &#123;&#125;</div><div class="line"></div><div class="line">  <span class="comment">// Example Operation Hook</span></div><div class="line">  beforeSave(ctx: any, <span class="attr">next</span>: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Todo: Before Save'</span>);</div><div class="line">    next();</div><div class="line">  &#125;</div><div class="line">  <span class="comment">// Example Remote Method</span></div><div class="line">  myRemote(next: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.model.find(next);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = Todo;</div></pre></td></tr></table></figure>
<p>Any logic related to our Todo Model in the Back-End should be placed in this <a href="http://typescriptlang.org" target="_blank" rel="external">TypeScript</a> File, though for this demo we are going to leave it as it is. But, what we really want to do is to update our Todo Model statistical configurations. </p>
<p>Please open the file <code>./common/models/todo.json</code> and update it as follows:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  ...</div><div class="line">  "mixins": &#123;</div><div class="line">    ...</div><div class="line">    "Stats": [</div><div class="line">      &#123;</div><div class="line">        ...</div><div class="line">        "count": &#123;</div><div class="line">          "on": "dueAt" // &lt;---- change createdAt for dueAt</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>What we are doing here is to tell the stats mixing to rely on the dueAt property, this way our statistical information will be generated according the todo due dates instead of when the todo was created.</p>
<h2 id="Disable-Auth-Feature"><a href="#Disable-Auth-Feature" class="headerlink" title="Disable Auth Feature"></a>Disable Auth Feature</h2><p>For this project and for practical purposes, we won’t use the authentication mechanism since I don’t want to spend time creating register/login sections, but I promise I will be creating a tutorial for authentication really soon.</p>
<p>For this open the server/component-config.json file and modify as follows:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "loopback-component-explorer": &#123;</div><div class="line">    "mountPath": "/explorer"</div><div class="line">  &#125;,</div><div class="line">  "@mean-expert/loopback-component-realtime": &#123;</div><div class="line">    "auth": false, // &lt;--- Change this to false</div><div class="line">    "debug": false</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Ok, for this project… That is all we need to do within our Back End. Now, it is time to create our <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> Client.</p>
<h2 id="Create-Angular-2-Web-Client"><a href="#Create-Angular-2-Web-Client" class="headerlink" title="Create Angular 2 Web Client"></a>Create Angular 2 Web Client</h2><p>We can create <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> clients by using the <a href="http://fireloop.io">FireLoop</a> command: <code>$ fireloop</code></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ fireloop</div><div class="line"></div><div class="line">     _-----_     ╭──────────────────────────╮</div><div class="line">    |       |    │   Welcome to FireLoop!   │</div><div class="line">    |--(o)--|    │  The MEAN Stack Platform │</div><div class="line">   `---------´   │      by MEAN Expert      │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __<span class="string">'.___.'</span>__   </div><div class="line"> ´   `  |° ´ Y ` </div><div class="line"></div><div class="line">? What <span class="keyword">do</span> you want to <span class="keyword">do</span>? (Use arrow keys)</div><div class="line">❯ Generate Angular2 Client </div><div class="line"></div><div class="line">? What <span class="built_in">type</span> of Angular 2 Application <span class="keyword">do</span> you want to create? Angular 2 <span class="keyword">for</span> Web</div><div class="line">? What<span class="string">'s the name of your application? webapp</span></div></pre></td></tr></table></figure>
<p>When following the process described above, several thing happen under the hood.</p>
<ul>
<li><a href="http://fireloop.io">FireLoop</a> internally uses <a href="http://cli.angular.io" target="_blank" rel="external">Angular CLI</a> to create an <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> project.</li>
<li><a href="http://fireloop.io">FireLoop</a> generates a SDK for your new <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> Client App to be fully connected with your <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> API.</li>
<li><a href="http://fireloop.io">FireLoop</a> installs the SDK and its dependencies, including types.</li>
</ul>
<p>At the end of the process you won’t need to worry about any integration or configuration, everything has been automatically done for you!!!.<br>[Public cheering in the background]</p>
<h2 id="Install-NG2-Charts"><a href="#Install-NG2-Charts" class="headerlink" title="Install NG2 Charts"></a>Install NG2 Charts</h2><p>Now that you avoided a good amount of configurations and integrations, you are ready to start working over the client application.</p>
<p>For this project I have decided to use <a href="http://valor-software.com/ng2-charts/" target="_blank" rel="external">Ng2Charts</a> to render our charts, but you can also check <a href="/2016/09/17/angular-2-chart-component-revised/">this tutorial for building your own custom charts</a>.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> webapp</div><div class="line">$ npm install --save ng2-charts chart.js moment</div></pre></td></tr></table></figure>
<h4 id="Customizing-The-File-System-Structure"><a href="#Customizing-The-File-System-Structure" class="headerlink" title="Customizing The File System Structure"></a>Customizing The File System Structure</h4><p>As you can see, you need to enter the webapp (or whatever name you chose for your app) directory and then install from there its own dependencies. This is because even-though you have a workspace for it, we want to keep the dependencies and the actual clients as decoupled as possible from the server.</p>
<p>This means that you don’t need to have in 1 place the modules for the server and the modules for <a href="http://nativescript.org" target="_blank" rel="external">NativeScript</a> because it does not make sense.</p>
<p>So… Why then are we creating everything within the same project? The short answer is for convenience, because remember that <a href="http://fireloop.io">FireLoop</a> integrates for you a full stack solution, allowing you to automatically build sdks for any of your clients and adding exclusive real-time and statistical functionalities without any configuration or extra effort.</p>
<p>But, if you don’t really like to have your webapp or any client within the same directory as the <a href="http://fireloop.io">FireLoop</a> project you can actually change that.</p>
<p>Just open the .yo-rc.json file and update the client path to any location of your preference</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "generator-fireloop": &#123;</div><div class="line">    "version": "1.0.0-beta.1",</div><div class="line">    "clients": &#123;</div><div class="line">      "webapp": &#123;</div><div class="line">        "path": "./webapp", // &lt;--- Move your project out of the FireLoop directory and update the path reference here</div><div class="line">        "type": "web"</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  "generator-loopback": &#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Of course, you may want to move some of these clients away; because you may want to have separated repositories and just because it does’t make sense to have it in one place when talking about mobile applications. Just remember you can still have your server and clients integrated through <a href="http://fireloop.io">FireLoop</a> regardless of the file system directory.</p>
<p>Anyway, in some cases it does make sense to have everything in 1 place; And the best of the examples will be the <a href="http://universal.angular.io" target="_blank" rel="external">Angular Universal</a> integration, that actually needs to be served from the <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> server.</p>
<p>Ok.. cool, now that I clarified how to customize the project structure, lets have some fun by building our real-time client application.</p>
<h2 id="Update-AppModule"><a href="#Update-AppModule" class="headerlink" title="Update AppModule"></a>Update AppModule</h2><p>First of all, lets open the <code>fireloop_project/webapp/src/app/app.module.ts</code> and tell <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> that we want to use the <a href="http://valor-software.com/ng2-charts/" target="_blank" rel="external">Ng2Charts</a> Module.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; BrowserModule &#125; <span class="keyword">from</span> <span class="string">'@angular/platform-browser'</span>;</div><div class="line"><span class="keyword">import</span> &#123; NgModule &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; FormsModule &#125; <span class="keyword">from</span> <span class="string">'@angular/forms'</span>;</div><div class="line"><span class="keyword">import</span> &#123; SDKModule &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/index'</span>;</div><div class="line"><span class="keyword">import</span> &#123; AppComponent &#125; <span class="keyword">from</span> <span class="string">'./app.component'</span>;</div><div class="line"><span class="keyword">import</span> &#123; ChartsModule &#125; <span class="keyword">from</span> <span class="string">'ng2-charts/ng2-charts'</span>;</div><div class="line"></div><div class="line">@NgModule(&#123;</div><div class="line">  <span class="attr">declarations</span>: [</div><div class="line">    AppComponent</div><div class="line">  ],</div><div class="line">  <span class="attr">imports</span>: [</div><div class="line">    BrowserModule,</div><div class="line">    FormsModule,</div><div class="line">    SDKModule.forRoot(),</div><div class="line">    ChartsModule</div><div class="line">  ],</div><div class="line">  <span class="attr">providers</span>: [],</div><div class="line">  <span class="attr">bootstrap</span>: [AppComponent]</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppModule</span> </span>&#123; &#125;</div></pre></td></tr></table></figure>
<p>Awesome, as simple as that our <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> Application is ready to start rendering real-time charts.</p>
<h2 id="Add-FireLoop-Logic"><a href="#Add-FireLoop-Logic" class="headerlink" title="Add FireLoop Logic"></a>Add FireLoop Logic</h2><p>Lets now update our <code>fireloop_project/webapp/src/app/app.component.ts</code> file as follows:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Todo, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"></div><div class="line">@Component(&#123;</div><div class="line">  <span class="attr">selector</span>: <span class="string">'app-root'</span>,</div><div class="line">  <span class="attr">templateUrl</span>: <span class="string">'./app.component.html'</span>,</div><div class="line">  <span class="attr">styleUrls</span>: [<span class="string">'./app.component.css'</span>]</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private title   : string = <span class="string">'Todo app works!'</span>;</div><div class="line">  private todo    : Todo   = <span class="keyword">new</span> Todo();</div><div class="line">  private todoRef : FireLoopRef&lt;Todo&gt;;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private rt: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.rt.onReady().subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">this</span>.todoRef = <span class="keyword">this</span>.rt.FireLoop.ref&lt;Todo&gt;(Todo);</div><div class="line">      <span class="keyword">this</span>.todoRef.stats().subscribe(<span class="function">(<span class="params">stats: any</span>) =&gt;</span> <span class="built_in">console</span>.log(stats));</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  create(): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.create(<span class="keyword">this</span>.todo).subscribe(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.todo = <span class="keyword">new</span> Todo());</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  update(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.upsert(todo).subscribe();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  remove(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.remove(todo).subscribe();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>I believe this code is pretty straight forward, basically you just need to create 1 Todo Model instance, 1 FireLoop Reference and a couple of methods to wrap the functionality, other than that is matter of connecting the pieces together.</p>
<p>If you figured out already, you should know that in a really smart way… You have access within your <a href="http://angular.io" target="_blank" rel="external">Angular 2</a> client to your backend models, in this case we created a Todo Model that works across the Back and Front Ends.</p>
<p>The other super important piece in here is the FireLoop Reference, this service allows you to sync your client applications with the back end server by providing you with methods that allow you to create, update, remove, listen for changes and listen for stats.</p>
<p>A good example can be seen within the constructor, we are subscribing to the stats method in order to listen for real-time statistics, this is really cool.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">constructor</span>(private rt: RealTime) &#123;</div><div class="line">  <span class="keyword">this</span>.todoRef = <span class="keyword">this</span>.rt.FireLoop.ref&lt;Todo&gt;(Todo);</div><div class="line">  <span class="keyword">this</span>.todoRef.stats().subscribe(<span class="function">(<span class="params">stats: any</span>) =&gt;</span> <span class="built_in">console</span>.log(stats));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Great, every time something changes within the FireLoop Todo Reference, you will get some statistical information about it, but… At this moment we are just sending to the console our stats, lets add the chart logic.</p>
<h2 id="Add-Ng2Charts-Logic"><a href="#Add-Ng2Charts-Logic" class="headerlink" title="Add Ng2Charts Logic"></a>Add Ng2Charts Logic</h2><p>What I’m adding here is just the standard configuration for a line chart that I took from their <a href="https://github.com/valor-software/ng2-charts" target="_blank" rel="external">documentation</a>.</p>
<p>Our <code>app.component.ts</code> will finally be something like:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>(<span class="string">'chart.js'</span>);</div><div class="line"></div><div class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</div><div class="line"><span class="keyword">import</span> &#123; Todo, FireLoopRef &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/models'</span>;</div><div class="line"><span class="keyword">import</span> &#123; RealTime &#125; <span class="keyword">from</span> <span class="string">'./shared/sdk/services'</span>;</div><div class="line"><span class="keyword">import</span> * <span class="keyword">as</span> moment <span class="keyword">from</span> <span class="string">'moment'</span>;</div><div class="line"></div><div class="line">@Component(&#123;</div><div class="line">  <span class="attr">selector</span>: <span class="string">'app-root'</span>,</div><div class="line">  <span class="attr">templateUrl</span>: <span class="string">'./app.component.html'</span>,</div><div class="line">  <span class="attr">styleUrls</span>: [<span class="string">'./app.component.css'</span>]</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AppComponent</span> </span>&#123;</div><div class="line"></div><div class="line">  private title   : string = <span class="string">'Todo app works!'</span>;</div><div class="line">  private todo    : Todo   = <span class="keyword">new</span> Todo();</div><div class="line">  private todoRef : FireLoopRef&lt;Todo&gt;;</div><div class="line">  private lineChartData:<span class="built_in">Array</span>&lt;any&gt; = [];</div><div class="line">  private lineChartLabels:<span class="built_in">Array</span>&lt;any&gt; = [];</div><div class="line">  private lineChartOptions:any = &#123;</div><div class="line">    <span class="attr">animation</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">responsive</span>: <span class="literal">false</span></div><div class="line">  &#125;;</div><div class="line">  private lineChartColors:<span class="built_in">Array</span>&lt;any&gt; = [</div><div class="line">    &#123; </div><div class="line">      <span class="attr">backgroundColor</span>: <span class="string">'rgba(148,159,177,0.2)'</span>,</div><div class="line">      <span class="attr">borderColor</span>: <span class="string">'rgba(148,159,177,1)'</span>,</div><div class="line">      <span class="attr">pointBackgroundColor</span>: <span class="string">'rgba(148,159,177,1)'</span>,</div><div class="line">      <span class="attr">pointBorderColor</span>: <span class="string">'#fff'</span>,</div><div class="line">      <span class="attr">pointHoverBackgroundColor</span>: <span class="string">'#fff'</span>,</div><div class="line">      <span class="attr">pointHoverBorderColor</span>: <span class="string">'rgba(148,159,177,0.8)'</span></div><div class="line">    &#125;</div><div class="line">  ];</div><div class="line">  private lineChartLegend:boolean = <span class="literal">true</span>;</div><div class="line">  private lineChartType:string = <span class="string">'line'</span>;</div><div class="line"></div><div class="line">  <span class="keyword">constructor</span>(private rt: RealTime) &#123;</div><div class="line">    <span class="keyword">this</span>.rt.onReady().subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">this</span>.todoRef = <span class="keyword">this</span>.rt.FireLoop.ref&lt;Todo&gt;(Todo);</div><div class="line">      <span class="keyword">this</span>.todoRef.stats().subscribe(<span class="function">(<span class="params">stats: any</span>) =&gt;</span> &#123;</div><div class="line">        <span class="keyword">this</span>.lineChartLabels = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">        <span class="keyword">this</span>.lineChartData   = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">        <span class="keyword">let</span> data = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">        stats.forEach(<span class="function">(<span class="params">stat: any</span>) =&gt;</span> &#123;</div><div class="line">          data.push(stat.count);</div><div class="line">          <span class="keyword">this</span>.lineChartLabels.push(moment(stat.universal).format(<span class="string">'MM-YYYY'</span>));</div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">this</span>.lineChartData.push(&#123; <span class="attr">data</span>: data, <span class="attr">label</span>: <span class="string">'Number of Dued Todos'</span>&#125;);</div><div class="line">      &#125;);</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  create(): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.create(<span class="keyword">this</span>.todo).subscribe(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">this</span>.todo = <span class="keyword">new</span> Todo());</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  update(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.upsert(todo).subscribe();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  remove(todo: Todo): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.todoRef.remove(todo).subscribe();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Here we are just adding a couple of configurations to decide which colors to be used, etc. But you should be able to see that now we are mapping our stats to be rendered by <a href="http://valor-software.com/ng2-charts/" target="_blank" rel="external">Ng2Charts</a>.</p>
<h2 id="Update-App-Component-View"><a href="#Update-App-Component-View" class="headerlink" title="Update App Component View"></a>Update App Component View</h2><p>Lets now update our <code>fireloop_project/webapp/src/app/app.component.html</code> file as follows:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></div><div class="line">  &#123;&#123;title&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> (<span class="attr">submit</span>)=<span class="string">"create()"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"todo"</span> <span class="attr">type</span>=<span class="string">"text"</span> [(<span class="attr">ngModel</span>)]=<span class="string">"todo.text"</span> <span class="attr">placeholder</span>=<span class="string">"Add Todo"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"todo"</span> <span class="attr">type</span>=<span class="string">"date"</span> [(<span class="attr">ngModel</span>)]=<span class="string">"todo.dueAt"</span> <span class="attr">placeholder</span>=<span class="string">"Due Date"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Add Todo<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> *<span class="attr">ngFor</span>=<span class="string">"let _todo of todoRef.on('change') | async"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"_todo.id"</span> [(<span class="attr">ngModel</span>)]=<span class="string">"_todo.text"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"update(_todo)"</span>&gt;</span>Update<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"remove(_todo)"</span>&gt;</span>Remove<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display: block;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">canvas</span> *<span class="attr">ngIf</span>=<span class="string">"lineChartData.length &gt; 0"</span> <span class="attr">baseChart</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span></span></div><div class="line">                [<span class="attr">datasets</span>]=<span class="string">"lineChartData"</span></div><div class="line">                [<span class="attr">labels</span>]=<span class="string">"lineChartLabels"</span></div><div class="line">                [<span class="attr">options</span>]=<span class="string">"lineChartOptions"</span></div><div class="line">                [<span class="attr">colors</span>]=<span class="string">"lineChartColors"</span></div><div class="line">                [<span class="attr">legend</span>]=<span class="string">"lineChartLegend"</span></div><div class="line">                [<span class="attr">chartType</span>]=<span class="string">"lineChartType"</span>&gt;<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Cool, how easy was that? we just bind everything associated to our component logic and here we are, with a full stack real-time application that is ready to be tested.</p>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Lets now run our fireloop project bu running <code>$ fireloop serve</code> and then select both, your client and server by using the sapace bar and then just hit return to load them.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ fireloop serve</div><div class="line"></div><div class="line">     _-----_     </div><div class="line">    |       |    ╭──────────────────────────╮</div><div class="line">    |--(o)--|    │      Let<span class="string">'s serve an      │</span></div><div class="line">   `---------´   │       application!       │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __'.___.<span class="string">'__   </span></div><div class="line"> ´   `  |° ´ Y ` </div><div class="line"></div><div class="line">? What application do you want to serve? (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to inverse selection)</div><div class="line">❯◯ webapp</div><div class="line"> ◯ server</div><div class="line">  ...</div><div class="line">	Loading Client Application: webapp</div><div class="line">	Loading Server Application: server</div></pre></td></tr></table></figure>
<p>And <em>Voilà</em>… Just open 2 browser in <a href="http://127.0.0.1:4200" target="_blank" rel="external">http://127.0.0.1:4200</a> so you can verify both are updated in real-time.</p>
<p><a href="https://storage.googleapis.com/mean-expert-images/fireloop-stats.gif" target="_blank" rel="external">FireLoop Stats Gif Example</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://fireloop.io/en/hello-world/"/>
    <id>http://fireloop.io/en/hello-world/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Creating FireLoop Models</title>
    <link href="http://fireloop.io/en/creating-fireloop-models/"/>
    <id>http://fireloop.io/en/creating-fireloop-models/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<p>When you start building a system, the fist thing you need to do right after your setup, is to start creating your API Models.</p>
<p>This models are similar to <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> Models, but with a difference… This models will be created and executed using <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a> instead of JavaScript. (POW!)</p>
<h2 id="Creating-FireLoop-Models"><a href="#Creating-FireLoop-Models" class="headerlink" title="Creating FireLoop Models"></a>Creating FireLoop Models</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ fireloop model MyModel</div><div class="line"></div><div class="line">? Enter the model name: MyModel</div><div class="line">? Select the data-source to attach MyModel to: db (memory)</div><div class="line">? Select model<span class="string">'s base class PersistedModel</span></div><div class="line">? Expose MyModel via the REST API? Yes</div><div class="line">? Custom plural form (used to build REST URL): </div><div class="line">? Common model or server only? common</div><div class="line">Let's add some MyModel properties now.</div><div class="line"></div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: text</div><div class="line">   invoke   loopback:property</div><div class="line">? Property <span class="built_in">type</span>: string</div><div class="line">? Required? No</div><div class="line">? Default value[leave blank <span class="keyword">for</span> none]: </div><div class="line"></div><div class="line">Let<span class="string">'s add another MyModel property.</span></div><div class="line">Enter an empty property name when done.</div><div class="line">? Property name: </div><div class="line"></div><div class="line">Generating: ./common/models/my-model.ts</div></pre></td></tr></table></figure>
<p>If you have experience with <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> you will see it is the same creational flow, is just that as described before; The model will be created in <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a> Language.</p>
<h2 id="Model-Structure"><a href="#Model-Structure" class="headerlink" title="Model Structure"></a>Model Structure</h2><p>Now that your Models are in  <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a> you will see these are different in structure to the <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> ones, but it has the exact same functionality.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; Model &#125; <span class="keyword">from</span> <span class="string">'@mean-expert/model'</span>;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @module Todo</div><div class="line"> * @description</div><div class="line"> * Write a useful Todo Model description.</div><div class="line"> * Register hooks and remote methods within the</div><div class="line"> * Model Decorator</div><div class="line"> **/</div><div class="line">@Model(&#123;</div><div class="line">  <span class="attr">hooks</span>: &#123;</div><div class="line">    <span class="attr">beforeSave</span>: &#123; <span class="attr">name</span>: <span class="string">'before save'</span>, <span class="attr">type</span>: <span class="string">'operation'</span> &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">remotes</span>: &#123;</div><div class="line">    <span class="attr">myRemote</span>: &#123;</div><div class="line">      <span class="attr">returns</span> : &#123; <span class="attr">arg</span>: <span class="string">'result'</span>, <span class="attr">type</span>: <span class="string">'array'</span> &#125;,</div><div class="line">      <span class="attr">http</span>    : &#123; <span class="attr">path</span>: <span class="string">'/my-remote'</span>, <span class="attr">verb</span>: <span class="string">'get'</span> &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Todo</span> </span>&#123;</div><div class="line">  <span class="comment">// LoopBack model instance is injected in constructor</span></div><div class="line">  <span class="keyword">constructor</span>(public model: any) &#123;&#125;</div><div class="line"></div><div class="line">  <span class="comment">// Example Operation Hook</span></div><div class="line">  beforeSave(ctx: any, <span class="attr">next</span>: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Todo: Before Save'</span>);</div><div class="line">    next();</div><div class="line">  &#125;</div><div class="line">  <span class="comment">// Example Remote Method</span></div><div class="line">  myRemote(next: <span class="built_in">Function</span>): <span class="keyword">void</span> &#123;</div><div class="line">    <span class="keyword">this</span>.model.find(next);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = Todo;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;When you start building a system, the fist thing you need to do right after your setup, is to start creating your API Models.&lt;/p&gt;
&lt;p&gt;This
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Serving Applications</title>
    <link href="http://fireloop.io/en/serving-apps/"/>
    <id>http://fireloop.io/en/serving-apps/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://fireloop.io">FireLoop</a> is able to run all of your project applications at once (including your server), for this you can use the <code>fireloop serve</code> command and select the applications you want to serve.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ fireloop serve</div><div class="line"></div><div class="line"></div><div class="line">     _-----_     </div><div class="line">    |       |    ╭──────────────────────────╮</div><div class="line">    |--(o)--|    │      Let<span class="string">'s serve an      │</span></div><div class="line">   `---------´   │       application!       │</div><div class="line">    ( _´U`_ )    ╰──────────────────────────╯</div><div class="line">    /___A___\   /</div><div class="line">     |  ~  |     </div><div class="line">   __'.___.<span class="string">'__   </span></div><div class="line"> ´   `  |° ´ Y ` </div><div class="line"></div><div class="line">? What application do you want to serve? (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to inverse selection)</div><div class="line">❯◯ webapp</div><div class="line"> ◯ server</div></pre></td></tr></table></figure>
<p>It is important to note that both, client and server applications will be running in <a href="http://typescriptlang.org" target="_blank" rel="external">TypeScript</a> and loaded with livereload mechanisms according the environment.</p>
<p>This means that once your applications are running, these will be restared by any code modification and recompiled to be live reloaded.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://fireloop.io&quot;&gt;FireLoop&lt;/a&gt; is able to run all of your project applications at once (including your server), for this you c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Getting Started</title>
    <link href="http://fireloop.io/en/getting-started/"/>
    <id>http://fireloop.io/en/getting-started/</id>
    <published>2017-05-04T21:13:32.971Z</published>
    <updated>2017-05-04T21:13:32.971Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://fireloop.io">FireLoop</a> is a <a href="http://nodejs.org" target="_blank" rel="external">NodeJS</a> Real-Time Platform that allows you to build modern and complex applications by seamlessly integrating the amazing technologies from the MEAN Stack; Like the IBM’s <a href="http://loopback.io" target="_blank" rel="external">LoopBack</a>, Google’s <a href="http://angular.io" target="_blank" rel="external">Angular 2</a>, Telerik’s <a href="http://nativescript.org" target="_blank" rel="external">NativeScript 2</a> and <a href="http://ionic.io" target="_blank" rel="external">Ionic 2</a> Frameworks.</p>
<p><a href="http://fireloop.io">FireLoop</a> also provides you with exclusive modules that will allow you to automatically build your <a href="https://firebase.google.com/" target="_blank" rel="external">FireBase</a> alike Real-Time APIs, Client SDKs, Statistics, <strong>Back and Front Ends development in <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a>!!!</strong>.</p>
<p><em>By the way, it’s cool and open source!!!</em></p>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g @mean-expert/fireloop</div></pre></td></tr></table></figure>
<h3 id="FireLoop-Features"><a href="#FireLoop-Features" class="headerlink" title="FireLoop Features"></a>FireLoop Features</h3><ul>
<li>Nice and easy setup.</li>
<li>1 command line tool for all (Server, Web Clients, Mobile Clients, SDK Builder).</li>
<li>Back and Front Ends in <a href="https://www.typescriptlang.org" target="_blank" rel="external">TypeScript</a>.</li>
<li><a href="http://loopback.io" target="_blank" rel="external">LoopBack</a> 2 and 3 Integration.</li>
<li><a href="http://angular.io" target="_blank" rel="external">Angular 2</a> Integration.</li>
<li><a href="http://nativescript.org" target="_blank" rel="external">NativeScript 2</a> Integration.</li>
<li><a href="http://ionic.io" target="_blank" rel="external">Ionic 2</a> Integration.</li>
<li><a href="https://github.com/mean-expert-official/loopback-sdk-builder" target="_blank" rel="external">SDK Builder</a> Integration.</li>
<li><a href="https://github.com/mean-expert-official/loopback-component-realtime" target="_blank" rel="external">Real-Time</a> Integraiton.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://fireloop.io&quot;&gt;FireLoop&lt;/a&gt; is a &lt;a href=&quot;http://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NodeJS&lt;/a&gt; Real-Time Platform t
    
    </summary>
    
    
  </entry>
  
</feed>
